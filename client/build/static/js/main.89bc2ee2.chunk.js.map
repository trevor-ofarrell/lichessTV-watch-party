{"version":3,"sources":["hooks/WindowDimensions.js","Home.jsx","useChat.js","useTyping.js","components/Board.js","Room.jsx","JoinChat.jsx","Chat.jsx","App.js","reportWebVitals.js","index.js"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","Input","tw","input","Home","props","room","setRoomName","name","setName","history","useHistory","handleClick","length","push","pathname","state","roomId","style","className","id","type","label","placeholder","variant","value","onChange","event","target","onClick","href","NEW_CHAT_MESSAGE_EVENT","START_TYPING_MESSAGE_EVENT","STOP_TYPING_MESSAGE_EVENT","useChat","messages","setMessages","users","setUsers","typingUsers","setTypingUsers","user","setUser","socketRef","useRef","selectRandomColor","colors","Math","floor","random","color","a","axios","get","process","response","result","data","fetchUsers","fetchMessages","current","socketIOClient","query","on","console","log","filter","u","message","incomingMessage","ownedByCurrentUser","senderId","typingInfo","disconnect","sendMessage","messageBody","system","emit","body","startTypingMessage","stopTypingMessage","addUser","useTyping","isTyping","setIsTyping","isKeyPressed","setIsKeyPressed","countdown","setCountdown","interval","clearInterval","setInterval","c","startTyping","stopTyping","cancelTyping","createPlayerObject","setPlayer","title","rating","String","Board","FEN","setFEN","black","setBlack","white","setWhite","listening","setListening","pgnData","fetch","then","res","json","players","EventSource","onmessage","parsedData","JSON","parse","fen","d","position","transitionDuration","showNotation","calcWidth","size","screenWidth","screenHeight","screen","Room","newMessage","setNewMessage","gameID","messageRef","scrollIntoView","behavior","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","map","i","onKeyUp","key","disabled","preventDefault","ref","JoinChat","onNameUpdate","userName","setUserName","Chat","match","params","location","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89bc2ee2.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst getWindowDimensions = () => {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height,\n    };\n};\n  \nconst useWindowDimensions = () => {\n    const [windowDimensions, setWindowDimensions] = useState(\n        getWindowDimensions()\n    );\n    useEffect(() => {\n        function handleResize() {\n        setWindowDimensions(getWindowDimensions());\n        }\n        window.addEventListener(\"resize\", handleResize);\n        return () => window.removeEventListener(\"resize\", handleResize);\n    }, []);\n\n    return windowDimensions;\n};\n\nexport default useWindowDimensions;","import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport tw from \"twin.macro\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\n\nexport const Input = tw.input`\n  px-4\n  py-2\n  placeholder-gray-500\n  w-auto\n  lg:mx-auto\n  focus:ring-primary-100\n  focus:border-primary-500\n  border-gray-400\n  border-width[1px]\n  border-solid\n  rounded-md\n  shadow-xs\n`;\n\nexport const InputTextLeft = tw(Input)`text-left py-2`;\n\nexport const PrimaryButton = ({ className = \"\", children, ...rest }) => {\n  return (\n    <Button\n      className={`bg-primary-500 hover:bg-primary-300 text-white`}\n      {...rest}\n      data-testid=\"btn\"\n    >\n      {children}\n    </Button>\n  );\n};\n\nconst Home = (props) => {\n  const { height, width } = useWindowDimensions();\n  const [room, setRoomName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n  const handleClick = () => {\n    if (!room.length) {\n      history.push({\n        pathname: `/featured`,\n        state: { name },\n      });\n    } else {\n      history.push({\n        pathname: `/${room}`,\n        state: { name, roomId: room },\n      });\n    }\n  };\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"bg-scheme-dark overflow-hidden fixed h-full max-h-full\"\n    >\n      <div className=\"text-scheme-orange text-3xl text-center p-2 pb-6\">\n        lichessTV watch party\n      </div>\n      <form>\n        <div className=\"md:w-3/5 md:mt-20 max-w-xl overflow-hidden p-4 mt-6 m-auto\">\n          <input\n            className=\"w-full h-10 pl-3 mb-4 text-base bg-scheme-light placeholder-gray-500 text-gray-500 border rounded-lg focus:shadow-outline\"\n            id=\"message\"\n            type=\"text\"\n            label=\"Message\"\n            placeholder=\"create username\"\n            variant=\"outlined\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n          <div className=\"m-auto text-center text-white mb-6\">\n            <button\n              onClick={() => handleClick(\"\")}\n              className=\"border-scheme-orange border-1 px-20 py-4 mt-4 rounded-lg\"\n            >\n              join featured room\n            </button>\n          </div>\n          <div className=\"text-scheme-orange text-center p-2 pb-8\">\n            or enter a lichess.org game ID to create a room for a specific game\n            in play\n          </div>\n          <input\n            className=\"w-full h-10 pl-3 mb-4 text-base bg-scheme-light placeholder-gray-500 text-gray-500 border rounded-lg focus:shadow-outline\"\n            id=\"message\"\n            type=\"text\"\n            label=\"Message\"\n            placeholder=\"enter lichess game id\"\n            variant=\"outlined\"\n            value={room}\n            onChange={(event) => setRoomName(event.target.value)}\n          />\n          <div className=\"m-auto text-center text-white\">\n            <button\n              onClick={() => handleClick(name)}\n              className=\"border-scheme-orange border-1 px-20 py-4 mt-6 rounded-lg\"\n            >\n              create custom room\n            </button>\n          </div>\n        </div>\n      </form>\n      <footer className=\"text-center fixed w-full bottom-0 text-scheme-orange p-4 flex\">\n        <a\n          href=\"https://lichess.org/api\"\n          className=\"lg:text-xl text-sm  underline m-auto\"\n        >\n          moves streamed using the lichess.org API\n        </a>\n        <a\n          href=\"https://github.com/trevor-ofarrell/lichessTV-watch-party\"\n          className=\"lg:text-xl text-sm underline m-auto\"\n        >\n          check out the source code on GitHub\n        </a>\n      </footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\nconst NEW_CHAT_MESSAGE_EVENT = \"NEW_CHAT_MESSAGE_EVENT\";\nconst START_TYPING_MESSAGE_EVENT = \"START_TYPING_MESSAGE_EVENT\";\nconst STOP_TYPING_MESSAGE_EVENT = \"STOP_TYPING_MESSAGE_EVENT\";\n\nconst useChat = (roomId, name) => {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [user, setUser] = useState();\n  const socketRef = useRef();\n\n  const selectRandomColor = () => {\n    const colors = [\n      \"text-green-500\",\n      \"text-purple-500\",\n      \"text-pink-500\",\n      \"text-red-500\",\n      \"text-red-700\",\n      \"text-blue-500\",\n      \"text-blue-300\",\n      \"text-green-400\",\n      \"text-pink-700\",\n      \"text-primary-500\",\n      \"text-orange-500\",\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  useEffect(() => {\n    const fetchUser = () => {\n      setUser({ name, color: selectRandomColor() });\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}/rooms/${roomId}/users`\n      );\n      const result = response.data.users;\n      setUsers(result);\n    };\n\n    fetchUsers();\n  }, [roomId]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}/rooms/${roomId}/messages`\n      );\n      const result = response.data.messages;\n      setMessages(result);\n    };\n\n    fetchMessages();\n  }, [roomId]);\n\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    socketRef.current = socketIOClient(process.env.REACT_APP_API_ENDPOINT, {\n      query: { roomId, name: user.name },\n    });\n\n    socketRef.current.on(\"connect\", () => {\n      console.log(socketRef.current.id);\n    });\n\n    socketRef.current.on(USER_JOIN_CHAT_EVENT, (user) => {\n      if (user.id === `${socketRef.current.id}${user.name}`) return;\n      setUsers((users) => [...users, user]);\n    });\n\n    socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\n      setUsers((users) => users.filter((u) => u.id !== user.id));\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser:\n          message.senderId === `${socketRef.current.id}${user.name}`,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    socketRef.current.on(START_TYPING_MESSAGE_EVENT, (typingInfo) => {\n      if (typingInfo.senderId !== `${socketRef.current.id}${user.name}`) {\n        const user = typingInfo.user;\n        setTypingUsers((users) => [...users, user]);\n      }\n    });\n\n    socketRef.current.on(STOP_TYPING_MESSAGE_EVENT, (typingInfo) => {\n      if (typingInfo.senderId !== `${socketRef.current.id}${user.name}`) {\n        const user = typingInfo.user;\n        setTypingUsers((users) => users.filter((u) => u.name !== user.name));\n      }\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId, user]);\n\n  const sendMessage = (messageBody, system) => {\n    if (!socketRef.current) return;\n    if (system === true) {\n      socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: socketRef.current.id,\n        name: user?.name,\n        system: system,\n      });\n    } else {\n      socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: `${socketRef.current.id}${user.name}`,\n        user: user,\n        name: user?.name,\n        color: user?.color,\n        system: system,\n      });\n    }\n  };\n\n  const startTypingMessage = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit(START_TYPING_MESSAGE_EVENT, {\n      senderId: socketRef.current.id,\n      user,\n    });\n  };\n\n  const stopTypingMessage = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit(STOP_TYPING_MESSAGE_EVENT, {\n      senderId: socketRef.current.id,\n      user,\n    });\n  };\n\n  const addUser = (name) => {\n    const user = { name };\n    setUsers((users) => [...users, user]);\n  };\n\n  return {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser,\n  };\n};\n\nexport default useChat;\n","import { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  const [isTyping, setIsTyping] = useState(false);\n  const [isKeyPressed, setIsKeyPressed] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  const startTyping = () => {\n    setIsKeyPressed(true);\n    setCountdown(5);\n    setIsTyping(true);\n  };\n\n  const stopTyping = () => {\n    setIsKeyPressed(false);\n  };\n\n  const cancelTyping = () => {\n    setCountdown(0);\n  };\n\n  useEffect(() => {\n    let interval;\n    if (!isKeyPressed) {\n      interval = setInterval(() => {\n        setCountdown((c) => c - 1);\n      }, 1000);\n    } else if (isKeyPressed || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    if (countdown === 0) {\n      setIsTyping(false);\n    }\n\n    return () => clearInterval(interval);\n  }, [isKeyPressed, countdown]);\n\n  return { isTyping, startTyping, stopTyping, cancelTyping };\n};\n\nexport default useTyping;\n","import React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\n\nconst createPlayerObject = (user, setPlayer) => {\n  setPlayer({\n    name: user.user.name,\n    title: user.user.title,\n    rating: String(user.rating),\n  });\n};\n\nexport const Board = (props) => {\n  const { roomId } = props;\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState({});\n  const [white, setWhite] = useState({});\n  const [listening, setListening] = useState(false);\n\n  let pgnData = {};\n  useEffect(async () => {\n    if (!listening) {\n      let source;\n      if (roomId !== \"featured\") {\n        if (pgnData.id !== roomId) {\n          pgnData = await fetch(\n            `http://localhost:3030/pgn/?id=${roomId}`\n          ).then((res) => res.json());\n          if (pgnData.players.black) {\n            createPlayerObject(pgnData.players.white, setWhite);\n            createPlayerObject(pgnData.players.black, setBlack);\n          }\n        }\n        source = new EventSource(\n          `${process.env.REACT_APP_API_ENDPOINT}/lichesstvcustom/?id=${roomId}`\n        );\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.fen]);\n        };\n      } else {\n        source = new EventSource(\n          `${process.env.REACT_APP_API_ENDPOINT}/lichesstv`\n        );\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.d.fen]);\n          if (parsedData.d.players) {\n            createPlayerObject(parsedData.d.players[0], setWhite);\n            createPlayerObject(parsedData.d.players[1], setBlack);\n          }\n        };\n      }\n      setListening(true);\n    }\n  }, [listening, FEN]);\n\n  return (\n    <div className=\"sm:mt-auto overflow-hidden m-auto\">\n      <div className=\"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\">\n        FEN: {FEN}\n      </div>\n      <div className=\"m-auto\">\n        <div className=\"flex font-medium md:text-2xl text-lg my-1 text-white\">\n          <div className=\"text-scheme-orange\">{black.title}&nbsp;</div>\n          <div>{black.name}&nbsp;</div>\n          <div className=\"text-gray-500\">{black.rating}</div>\n        </div>\n        <div className=\"m-auto\">\n          <Chessboard\n            position={FEN[0]}\n            transitionDuration={100}\n            showNotation={false}\n            calcWidth={(size) =>\n              size.screenWidth < 1440\n                ? (size.screenHeight / 100) * 46\n                : size.screenWidth > 1440\n                ? (size.screenHeight / 100) * 70\n                : (screen.width / 100) * 100\n            }\n          />\n        </div>\n        <div className=\"flex font-medium md:text-2xl text-lg my-1 text-white\">\n          <div className=\"text-scheme-orange\">{white.title}&nbsp;</div>\n          <div>{white.name}&nbsp;</div>\n          <div className=\"text-gray-500\">{white.rating}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useRef, useState, useEffect } from \"react\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\nimport { Board } from \"./components/Board\";\n\nconst Room = (props) => {\n\n  const { roomId, name } = props;\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\n  const { height, width } = useWindowDimensions();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [gameID, setGameID] = useState(\"\");\n  const messageRef = useRef();\n  const {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n  } = useChat(roomId, name);\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = (event) => {\n    event.preventDefault();\n    cancelTyping();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage, false);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      if (newMessage !== \"\") {\n        sendMessage(newMessage, false);\n        setNewMessage(\"\");\n      }\n    }\n  };\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  useEffect(() => {\n    if (isTyping) startTypingMessage();\n    else stopTypingMessage();\n  }, [isTyping]);\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-scheme-dark overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <a\n          href=\"/\"\n          className=\"md:left-4 md:top-4 left-2 top-2 absolute md:pr-6 hidden md:flex\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"md:h-10 md:w-10 h-8 w-8 text-scheme-orange\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n            />\n          </svg>\n        </a>\n        <div className=\"sm:mt-auto overflow-hidden m-auto mt-0\">\n          <div className=\"flex md:mt-2 text-gray-400\">\n            <div className=\"flex mr-auto p-2 pl-0\">\n              <h1 className=\"md:text-xl text-sm pr-1\">game:</h1>\n              <a\n                href={`https://lichess.org/${gameID}`}\n                className=\"md:text-xl text-sm underline  \"\n              >\n                lichess.org/{gameID}\n              </a>\n            </div>\n            <h1 className=\"md:text-xl text-sm p-2 ml-auto\">room: {roomId}</h1>\n          </div>\n          <Board roomId={roomId} />\n        </div>\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-scheme-dark ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <>\n              <ol>\n                {messages.map((message, i) => (\n                  <li key={i}>\n                    {message.system === true ? (\n                      <div className=\"text-center text-gray-500 text-sm\">\n                        {message.body}\n                      </div>\n                    ) : (\n                      <span className=\"text-left text-white text-sm flex\">\n                        {message.name ? (\n                          <div\n                            className={`font-bold ${message.user.color} mr-1`}\n                          >\n                            {message.name}:\n                          </div>\n                        ) : (\n                          <>{\"\"}</>\n                        )}\n                        {message.body}\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ol>\n              <div className=\"xl:w-30% px-auto w-99 bottom-1 absolute\">\n                <input\n                  className=\"w-full h-10 pl-3 pr-8 text-base placeholder-white-600 text-gray-500 border bg-scheme-light rounded-lg\"\n                  id=\"message\"\n                  type=\"text\"\n                  label=\"Message\"\n                  placeholder=\"enter message here\"\n                  variant=\"outlined\"\n                  value={newMessage}\n                  onChange={handleNewMessageChange}\n                  onKeyUp={handleKeyUp}\n                />\n                <button\n                  className=\"absolute inset-y-0 h-10 right-0 flex items-center px-4 font-bold text-white bg-scheme-orange rounded-r-lg\"\n                  disabled={!newMessage}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSendMessage}\n                >\n                  Send\n                </button>\n              </div>\n            </>\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n","import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useChat from \"./useChat\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\n\nconst JoinChat = (props) => {\n  const { roomId, onNameUpdate } = props;\n  const [name, setName] = useState(\"\");\n  const { height, width } = useWindowDimensions();\n  const [userName, setUserName] = useState(\"\");\n  const messageRef = useRef();\n  const history = useHistory();\n  const { addUser } = useChat(roomId, name);\n\n  const handleClick = () => {\n    if (!roomId.length) {\n      history.push({\n        pathname: `/featured`,\n        state: { name },\n      });\n    } else {\n      history.push({\n        pathname: `/${roomId}`,\n        state: { name },\n      });\n    }\n  };\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-scheme-dark overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pt-20 pb-14 bg-scheme-dark ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <h1 className=\"text-xl p-4 text-center text-white\">\n              Room: {roomId}\n            </h1>\n            <div className=\"m-auto xl:pt-12\">\n              <div className=\"font-bold text-white text-center text-lg px-4\">\n                Create a username to join the chat\n              </div>\n              <div>\n                <div className=\"xl:w-full w-80 overflow-hidden p-4 m-auto\">\n                  <input\n                    className=\"w-full h-10 pl-3 text-base bg-scheme-light placeholder-gray-500 border rounded-lg focus:shadow-outline\"\n                    id=\"message\"\n                    type=\"text\"\n                    label=\"Message\"\n                    placeholder=\"enter username\"\n                    variant=\"outlined\"\n                    value={userName}\n                    onChange={(event) => setUserName(event.target.value)}\n                  />\n                </div>\n              </div>\n              <button\n                className=\"h-12 m-auto flex items-center px-4 font-bold text-white bg-scheme-orange rounded-lg\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setName(userName);\n                  onNameUpdate(userName);\n                  addUser(userName);\n                  handleClick(userName)\n                }}\n              >\n                Join Chat\n              </button>\n            </div>\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JoinChat;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Room from \"./Room\";\nimport JoinChat from \"./JoinChat\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\n\nconst Chat = (props) => {\n  const { height, width } = useWindowDimensions();\n  const { roomId } = props.match.params;\n  const [name, setName] = useState(props.location.state?.name);\n\n  const updateName = (name) => {\n    setName(name);\n  };\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-gray-900 overflow-hidden fixed\"\n    >\n      {name ? (\n        <Room name={name} roomId={roomId} />\n      ) : (\n        <JoinChat roomId={roomId} onNameUpdate={updateName} />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport \"./index.css\";\nimport Chat from \"./Chat\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:roomId\" component={Chat} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}