{"version":3,"sources":["Home.jsx","useChat.js","useTyping.js","Room.jsx","JoinChat.jsx","Chat.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","tw","input","getWindowDimensions","window","width","innerWidth","height","innerHeight","Home","props","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","room","setRoomName","name","setName","history","useHistory","handleClick","length","push","pathname","state","style","className","id","type","label","placeholder","variant","value","onChange","event","target","onClick","href","NEW_CHAT_MESSAGE_EVENT","START_TYPING_MESSAGE_EVENT","STOP_TYPING_MESSAGE_EVENT","useChat","roomId","messages","setMessages","users","setUsers","typingUsers","setTypingUsers","user","setUser","socketRef","useRef","selectRandomColor","colors","Math","floor","random","color","a","axios","get","process","response","result","data","fetchUsers","fetchMessages","current","socketIOClient","query","on","console","log","filter","u","message","incomingMessage","ownedByCurrentUser","senderId","typingInfo","disconnect","sendMessage","messageBody","system","emit","body","startTypingMessage","stopTypingMessage","addUser","useTyping","isTyping","setIsTyping","isKeyPressed","setIsKeyPressed","countdown","setCountdown","interval","clearInterval","setInterval","c","startTyping","stopTyping","cancelTyping","Room","newMessage","setNewMessage","gameID","setGameID","FEN","setFEN","black","setBlack","white","setWhite","messageRef","listening","setListening","createPlayerNames","setPlayer","title","rating","scrollIntoView","behavior","EventSource","onmessage","parsedData","JSON","parse","fen","d","players","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","position","transitionDuration","showNotation","calcWidth","size","screenWidth","screenHeight","screen","map","i","onKeyUp","key","disabled","preventDefault","ref","JoinChat","onNameUpdate","userName","setUserName","Chat","match","params","location","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAIaA,EAAQC,IAAGC,MAAK,ovBA6BvBC,GAduBF,YAAGD,EAAHC,CAAS,+DAcV,WAC1B,MAAmDG,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,eAgHdC,EAxFF,SAACC,GACZ,MAlB0B,WAC1B,MAAgDC,mBAC9CR,KADF,mBAAOS,EAAP,KAAyBC,EAAzB,KAaA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBV,KAItB,OADAC,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACjD,IAEIH,EAImBM,GAAlBX,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,MAChB,EAA4BM,mBAAS,IAArC,mBAAOQ,EAAP,KAAaC,EAAb,KACA,EAAwBT,mBAAS,IAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACMC,EAAUC,cACVC,EAAc,WACbN,EAAKO,OAMRH,EAAQI,KAAK,CACXC,SAAS,IAAD,OAAMT,GACdU,MAAO,CAAER,UAPXE,EAAQI,KAAK,CACXC,SAAS,YACTC,MAAO,CAAER,WAUf,OACE,sBACES,MAAO,CAAEvB,OAAQA,EAAQF,MAAOA,GAChC0B,UAAU,iCAFZ,UAIE,qBAAKA,UAAU,2CAAf,mCAGA,sBAAKA,UAAU,2DAAf,UACE,uBACEA,UAAU,uGACVC,GAAG,UACHC,KAAK,OACLC,MAAM,UACNC,YAAY,kBACZC,QAAQ,WACRC,MAAOhB,EACPiB,SAAU,SAACC,GAAD,OAAWjB,EAAQiB,EAAMC,OAAOH,UAE5C,qBAAKN,UAAU,qCAAf,SACE,wBACEU,QAAS,kBAAMhB,KACfM,UAAU,mDAFZ,kCAOF,qBAAKA,UAAU,kCAAf,yFAIA,uBACEA,UAAU,kGACVC,GAAG,UACHC,KAAK,OACLC,MAAM,UACNC,YAAY,wBACZC,QAAQ,WACRC,MAAOlB,EACPmB,SAAU,SAACC,GAAD,OAAWnB,EAAYmB,EAAMC,OAAOH,aAGlD,qBAAKN,UAAU,gCAAf,SACE,wBACEU,QAAS,kBAAMhB,KACfM,UAAU,mDAFZ,kCAOF,sBAAKA,UAAU,mEAAf,UACE,mBACEW,KAAK,0BACLX,UAAU,iDAFZ,sDAMA,oBAAIA,UAAU,0BAAd,eACA,mBACEW,KAAK,2DACLX,UAAU,iDAFZ,2D,oFCjIFY,EAAyB,yBACzBC,EAA6B,6BAC7BC,EAA4B,4BAgKnBC,EA9JC,SAACC,EAAQ1B,GACvB,MAAgCV,mBAAS,IAAzC,mBAAOqC,EAAP,KAAiBC,EAAjB,KACA,EAA0BtC,mBAAS,IAAnC,mBAAOuC,EAAP,KAAcC,EAAd,KACA,EAAsCxC,mBAAS,IAA/C,mBAAOyC,EAAP,KAAoBC,EAApB,KACA,EAAwB1C,qBAAxB,mBAAO2C,EAAP,KAAaC,EAAb,KACMC,EAAYC,mBAEZC,EAAoB,WACxB,IAAMC,EAAS,CACb,iBACA,kBACA,gBACA,eACA,eACA,gBACA,gBACA,iBACA,gBACA,mBACA,mBAEF,OAAOA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAOjC,UAGlDZ,qBAAU,WAENyC,EAAQ,CAAElC,OAAM0C,MAAOL,QAGxB,IAEH5C,qBAAU,YACQ,uCAAG,8BAAAkD,EAAA,sEACMC,IAAMC,IAAN,UAClBC,wBADkB,kBAC0BpB,EAD1B,WADN,OACXqB,EADW,OAIXC,EAASD,EAASE,KAAKpB,MAC7BC,EAASkB,GALQ,2CAAH,qDAQhBE,KACC,CAACxB,IAEJjC,qBAAU,YACW,uCAAG,8BAAAkD,EAAA,sEACGC,IAAMC,IAAN,UAClBC,wBADkB,kBAC0BpB,EAD1B,cADH,OACdqB,EADc,OAIdC,EAASD,EAASE,KAAKtB,SAC7BC,EAAYoB,GALQ,2CAAH,qDAQnBG,KACC,CAACzB,IAEJjC,qBAAU,WACR,GAAKwC,EA2CL,OAxCAE,EAAUiB,QAAUC,IAAeP,wBAAoC,CACrEQ,MAAO,CAAE5B,SAAQ1B,KAAMiC,EAAKjC,QAG9BmC,EAAUiB,QAAQG,GAAG,WAAW,WAC9BC,QAAQC,IAAItB,EAAUiB,QAAQzC,OAGhCwB,EAAUiB,QAAQG,GAzEO,wBAyEkB,SAACtB,GACtCA,EAAKtB,KAAL,UAAewB,EAAUiB,QAAQzC,IAAjC,OAAsCsB,EAAKjC,OAC/C8B,GAAS,SAACD,GAAD,4BAAeA,GAAf,CAAsBI,UAGjCE,EAAUiB,QAAQG,GA7EQ,yBA6EkB,SAACtB,GAC3CH,GAAS,SAACD,GAAD,OAAWA,EAAM6B,QAAO,SAACC,GAAD,OAAOA,EAAEhD,KAAOsB,EAAKtB,YAGxDwB,EAAUiB,QAAQG,GAAGjC,GAAwB,SAACsC,GAC5C,IAAMC,EAAe,2BAChBD,GADgB,IAEnBE,mBACEF,EAAQG,WAAR,UAAwB5B,EAAUiB,QAAQzC,IAA1C,OAA+CsB,EAAKjC,QAExD4B,GAAY,SAACD,GAAD,4BAAkBA,GAAlB,CAA4BkC,UAG1C1B,EAAUiB,QAAQG,GAAGhC,GAA4B,SAACyC,GAChD,GAAIA,EAAWD,WAAX,UAA2B5B,EAAUiB,QAAQzC,IAA7C,OAAkDsB,EAAKjC,MAAQ,CACjE,IAAMiC,EAAO+B,EAAW/B,KACxBD,GAAe,SAACH,GAAD,4BAAeA,GAAf,CAAsBI,WAIzCE,EAAUiB,QAAQG,GAAG/B,GAA2B,SAACwC,GAC/C,GAAIA,EAAWD,WAAX,UAA2B5B,EAAUiB,QAAQzC,IAA7C,OAAkDsB,EAAKjC,MAAQ,CACjE,IAAMiC,EAAO+B,EAAW/B,KACxBD,GAAe,SAACH,GAAD,OAAWA,EAAM6B,QAAO,SAACC,GAAD,OAAOA,EAAE3D,OAASiC,EAAKjC,eAI3D,WACLmC,EAAUiB,QAAQa,gBAEnB,CAACvC,EAAQO,IA4CZ,MAAO,CACLN,WACAM,OACAJ,QACAE,cACAmC,YA/CkB,SAACC,EAAaC,GAC3BjC,EAAUiB,WACA,IAAXgB,EACFjC,EAAUiB,QAAQiB,KAAK/C,EAAwB,CAC7CgD,KAAMH,EACNJ,SAAU5B,EAAUiB,QAAQzC,GAC5BX,KAAI,OAAEiC,QAAF,IAAEA,OAAF,EAAEA,EAAMjC,KACZoE,OAAQA,IAGVjC,EAAUiB,QAAQiB,KAAK/C,EAAwB,CAC7CgD,KAAMH,EACNJ,SAAS,GAAD,OAAK5B,EAAUiB,QAAQzC,IAAvB,OAA4BsB,EAAKjC,MACzCiC,KAAMA,EACNjC,KAAI,OAAEiC,QAAF,IAAEA,OAAF,EAAEA,EAAMjC,KACZ0C,MAAK,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAMS,MACb0B,OAAQA,MAgCZG,mBA3ByB,WACpBpC,EAAUiB,SACfjB,EAAUiB,QAAQiB,KAAK9C,EAA4B,CACjDwC,SAAU5B,EAAUiB,QAAQzC,GAC5BsB,UAwBFuC,kBApBwB,WACnBrC,EAAUiB,SACfjB,EAAUiB,QAAQiB,KAAK7C,EAA2B,CAChDuC,SAAU5B,EAAUiB,QAAQzC,GAC5BsB,UAiBFwC,QAbc,SAACzE,GACf,IAAMiC,EAAO,CAAEjC,QACf8B,GAAS,SAACD,GAAD,4BAAeA,GAAf,CAAsBI,UChHpByC,EAvCG,WAChB,MAAgCpF,oBAAS,GAAzC,mBAAOqF,EAAP,KAAiBC,EAAjB,KACA,EAAwCtF,oBAAS,GAAjD,mBAAOuF,EAAP,KAAqBC,EAArB,KACA,EAAkCxF,mBAAS,GAA3C,mBAAOyF,EAAP,KAAkBC,EAAlB,KAiCA,OAjBAvF,qBAAU,WACR,IAAIwF,EAaJ,OAZKJ,GAIMA,GAA8B,IAAdE,IACzBG,cAAcD,GAJdA,EAAWE,aAAY,WACrBH,GAAa,SAACI,GAAD,OAAOA,EAAI,OACvB,KAKa,IAAdL,GACFH,GAAY,GAGP,kBAAMM,cAAcD,MAC1B,CAACJ,EAAcE,IAEX,CAAEJ,WAAUU,YA/BC,WAClBP,GAAgB,GAChBE,EAAa,GACbJ,GAAY,IA4BkBU,WAzBb,WACjBR,GAAgB,IAwB0BS,aArBvB,WACnBP,EAAa,MCZJrG,EAAQC,IAAGC,MAAK,ovBAiBvBC,GAFuBF,YAAGD,EAAHC,CAAS,+DAEV,WAC1B,MAAmDG,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,eAgQdqG,EAxOF,SAACnG,GACZ,IAAQqC,EAAiBrC,EAAjBqC,OAAQ1B,EAASX,EAATW,KAChB,EAA4D0E,IAApDC,EAAR,EAAQA,SAAmCY,GAA3C,EAAkBF,YAAlB,EAA+BC,WAA/B,EAA2CC,cAC3C,EApB0B,WAC1B,MAAgDjG,mBAC9CR,KADF,mBAAOS,EAAP,KAAyBC,EAAzB,KAaA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBV,KAItB,OADAC,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACjD,IAEIH,EAMmBM,GAAlBX,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,MAChB,EAAoCM,mBAAS,IAA7C,mBAAOmG,EAAP,KAAmBC,EAAnB,KACA,EAA4BpG,mBAAS,IAArC,mBAAOqG,EAAP,KAAeC,EAAf,KACA,EAAsBtG,mBAAS,IAA/B,mBAAOuG,EAAP,KAAYC,EAAZ,KACA,EAA0BxG,mBAAS,IAAnC,mBAAOyG,EAAP,KAAcC,EAAd,KACA,EAA0B1G,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACMC,EAAa/D,mBACnB,EAAkC9C,oBAAS,GAA3C,mBAAO8G,EAAP,KAAkBC,EAAlB,KACA,EASI5E,EAAQC,EAAQ1B,GARlB2B,EADF,EACEA,SAIAuC,GALF,EAEEjC,KAFF,EAGEJ,MAHF,EAIEE,YAJF,EAKEmC,aACAK,EANF,EAMEA,mBACAC,EAPF,EAOEA,kBA0BI8B,GAjCN,EAQE7B,QAyBwB,SAACxC,EAAMsE,GAE3BtE,EAAKA,KAAKjC,MAMZuG,EALItE,EAAKA,KAAKuE,MACDvE,EAAKA,KAAKuE,MAAQ,IAAMvE,EAAKA,KAAKjC,KAAO,IAAMiC,EAAKwE,OAEpDxE,EAAKA,KAAKjC,KAAO,IAAMiC,EAAKwE,UA8D7C,OA5CAhH,qBAAU,kBAAM0G,EAAW/C,QAAQsD,eAAe,CAAEC,SAAU,cAE9DlH,qBAAU,WACH2G,KAEQ,aAAX1E,EACc,IAAIkF,YAAJ,UACL9D,wBADK,gCACqDpB,IAErD,IAAIkF,YAAJ,UACL9D,wBADK,gBAIL+D,UADM,aAAXnF,EACiB,SAACR,GAClB,IAAM4F,EAAaC,KAAKC,MAAM9F,EAAM+B,MAEpC6C,EAAO,CAACgB,EAAWG,MACfH,EAAWnG,IACbiF,EAAUkB,EAAWnG,KAIN,SAACO,GAClB,IAAM4F,EAAaC,KAAKC,MAAM9F,EAAM+B,MACpCO,QAAQC,IAAIvC,EAAM+B,MAClB6C,EAAO,CAACgB,EAAWI,EAAED,MACjBH,EAAWI,EAAEC,UACfb,EAAkBQ,EAAWI,EAAEC,QAAQ,GAAIjB,GAC3CI,EAAkBQ,EAAWI,EAAEC,QAAQ,GAAInB,IAEzCc,EAAWI,EAAEvG,IACfiF,EAAUkB,EAAWI,EAAEvG,KAI7B0F,GAAa,MAEd,CAACD,EAAWP,IAEfpG,qBAAU,WACJkF,EAAUJ,IACTC,MACJ,CAACG,IAGF,qBACElE,MAAO,CAAEvB,OAAQA,EAAQF,MAAOA,GAChC0B,UAAU,mCAFZ,SAIE,sBAAKA,UAAU,+EAAf,UACE,mBAAGW,KAAK,IAAIX,UAAU,kEAAtB,SACE,qBACE0G,MAAM,6BACN1G,UAAU,qCACV2G,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbR,EAAE,yJAIR,sBAAKxG,UAAU,yCAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,qCAAd,mBACA,oBACEW,KAAI,8BAAyBsE,GAC7BjF,UAAU,gCAFZ,yBAIeiF,QAGjB,qBAAIjF,UAAU,2CAAd,mBACSgB,QAGX,sBAAKhB,UAAU,sGAAf,kBACQmF,KAER,sBAAKnF,UAAU,SAAf,UACE,qBAAKA,UAAU,kDAAf,SACGqF,IAEH,qBAAKrF,UAAU,SAAf,SACE,cAAC,IAAD,CACEiH,SAAU9B,EAAI,GACd+B,mBAAoB,IACpBC,cAAc,EACdC,UAAW,SAACC,GAAD,OACTA,EAAKC,YAAc,KACdD,EAAKE,aAAe,IAAO,GAC5BF,EAAKC,YAAc,KAClBD,EAAKE,aAAe,IAAO,GAC3BC,OAAOlJ,MAAQ,IAAO,SAIjC,sBAAK0B,UAAU,kDAAf,UACG,IACAuF,WAIP,qBAAKvF,UAAU,4GAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,qCACE,6BACGiB,EAASwG,KAAI,SAACvE,EAASwE,GAAV,OACZ,8BACsB,IAAnBxE,EAAQQ,OACP,qBAAK1D,UAAU,oCAAf,SACGkD,EAAQU,OAGX,uBAAM5D,UAAU,oCAAhB,UACGkD,EAAQ5D,KACP,sBAAKU,UAAS,oBAAekD,EAAQ3B,KAAKS,MAA5B,SAAd,UACGkB,EAAQ5D,KADX,OAIA,mCAAG,KAEJ4D,EAAQU,SAdN8D,QAoBb,sBAAK1H,UAAU,0CAAf,UACE,uBACEA,UAAU,2GACVC,GAAG,UACHC,KAAK,OACLC,MAAM,UACNC,YAAY,qBACZC,QAAQ,WACRC,MAAOyE,EACPxE,SA5Le,SAACC,GAC9BwE,EAAcxE,EAAMC,OAAOH,QA4LbqH,QAhLI,SAACnH,GACD,UAAdA,EAAMoH,KACW,KAAf7C,IACFvB,EAAYuB,GAAY,GACxBC,EAAc,QA8KN,wBACEhF,UAAU,2HACV6H,UAAW9C,EACX1E,QAAQ,YACR2B,MAAM,UACNtB,QAhMU,SAACF,GACzBA,EAAMsH,iBACNjD,IACmB,KAAfE,IACFvB,EAAYuB,GAAY,GACxBC,EAAc,MAsLJ,wBAWJ,qBAAK+C,IAAKtC,eC1QTxH,EAAQC,IAAGC,MAAK,ovBAyCvBC,GA1BuBF,YAAGD,EAAHC,CAAS,+DA0BV,WAC1B,MAAmDG,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,eAkLduJ,EA1JE,SAACrJ,GAChB,IAAQqC,EAAyBrC,EAAzBqC,OAAQiH,EAAiBtJ,EAAjBsJ,aAChB,EAAwBrJ,mBAAS,IAAjC,mBAAOU,EAAP,KAAaC,EAAb,KACA,EAA4DyE,IAC5D,GADA,EAAQC,SAAR,EAAkBU,YAAlB,EAA+BC,WAA/B,EAA2CC,aApBjB,WAC1B,MAAgDjG,mBAC9CR,KADF,mBAAOS,EAAP,KAAyBC,EAAzB,KAaA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBV,KAItB,OADAC,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACjD,IAEIH,EAOmBM,IAAlBX,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,MAChB,EAAoCM,mBAAS,IAA7C,mBACA,GADA,UACsBA,mBAAS,KAA/B,mBAAOuG,EAAP,KAAYC,EAAZ,KACA,EAA0BxG,mBAAS,IAAnC,mBAAOyG,EAAP,KAAcC,EAAd,KACA,EAA0B1G,mBAAS,IAAnC,mBAAO2G,EAAP,KAAcC,EAAd,KACA,EAAgC5G,mBAAS,IAAzC,mBAAOsJ,EAAP,KAAiBC,EAAjB,KACM1C,EAAa/D,mBACnB,EAAkC9C,oBAAS,GAA3C,mBAAO8G,EAAP,KAAkBC,EAAlB,KACA,EASI5E,EAAQC,EAAQ1B,GADlByE,GARF,EACE9C,SADF,EAEEM,KAFF,EAGEJ,MAHF,EAIEE,YAJF,EAKEmC,YALF,EAMEK,mBANF,EAOEC,kBAPF,EAQEC,SAYI6B,EAAoB,SAACrE,EAAMsE,GAE3BtE,EAAKA,KAAKjC,MAMZuG,EALItE,EAAKA,KAAKuE,MACDvE,EAAKA,KAAKuE,MAAQ,IAAMvE,EAAKA,KAAKjC,KAAO,IAAMiC,EAAKwE,OAEpDxE,EAAKA,KAAKjC,KAAO,IAAMiC,EAAKwE,SAuC7C,OAjCAhH,qBAAU,kBAAM0G,EAAW/C,QAAQsD,eAAe,CAAEC,SAAU,cAE9DlH,qBAAU,WACH2G,KAEQ,aAAX1E,EACc,IAAIkF,YAAJ,UACL9D,wBADK,gCACqDpB,IAErD,IAAIkF,YAAJ,UACL9D,wBADK,gBAIL+D,UADM,aAAXnF,EACiB,SAACR,GAClB,IAAM4F,EAAaC,KAAKC,MAAM9F,EAAM+B,MACpCO,QAAQC,IAAIvC,EAAM+B,MAClB6C,EAAO,CAACgB,EAAWG,OAGF,SAAC/F,GAClB,IAAM4F,EAAaC,KAAKC,MAAM9F,EAAM+B,MACpCO,QAAQC,IAAIvC,EAAM+B,MAClB6C,EAAO,CAACgB,EAAWI,EAAED,MACjBH,EAAWI,EAAEC,UACfb,EAAkBQ,EAAWI,EAAEC,QAAQ,GAAIjB,GAC3CI,EAAkBQ,EAAWI,EAAEC,QAAQ,GAAInB,KAIjDK,GAAa,MAEd,CAACD,EAAWP,IAGb,qBACEpF,MAAO,CAAEvB,OAAQA,EAAQF,MAAOA,GAChC0B,UAAU,mCAFZ,SAIE,sBAAKA,UAAU,+EAAf,UACE,sBAAKA,UAAU,oCAAf,UACE,sBAAKA,UAAU,yEAAf,kBACQmF,KAER,sBAAKnF,UAAU,SAAf,UACE,qBAAKA,UAAU,kDAAf,SACGqF,IAEH,qBAAKrF,UAAU,SAAf,SACE,cAAC,IAAD,CACEiH,SAAU9B,EAAI,GACd+B,mBAAoB,IACpBC,cAAc,EACdC,UAAW,SAACC,GAAD,OACTA,EAAKC,YAAc,KACdD,EAAKE,aAAe,IAAO,GAC5BF,EAAKC,YAAc,KAClBD,EAAKE,aAAe,IAAO,GAC3BC,OAAOlJ,MAAQ,IAAO,SAIjC,sBAAK0B,UAAU,kDAAf,UACG,IACAuF,WAIP,qBAAKvF,UAAU,4GAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,qBAAIA,UAAU,UAAd,mBAA+BgB,KAE/B,sBAAKhB,UAAU,kBAAf,UACE,qBAAKA,UAAU,gDAAf,gDAGA,8BACE,qBAAKA,UAAU,4CAAf,SACE,uBACEA,UAAU,kGACVC,GAAG,UACHC,KAAK,OACLC,MAAM,UACNC,YAAY,iBACZC,QAAQ,WACRC,MAAO4H,EACP3H,SAAU,SAACC,GAAD,OAAW2H,EAAY3H,EAAMC,OAAOH,cAIpD,wBACEN,UAAU,yHACVK,QAAQ,YACR2B,MAAM,UACNtB,QAAS,WACPnB,EAAQ2I,GACRD,EAAaC,GACbnE,EAAQmE,IAPZ,0BAaF,qBAAKH,IAAKtC,eCtNhBrH,EAAsB,WAC1B,MAAmDC,OACnD,MAAO,CACLC,MAFF,EAAQC,WAGNC,OAHF,EAA2BC,cA8Cd2J,EAtBF,SAACzJ,GAAW,IAAD,EACtB,EAlB0B,WAC1B,MAAgDC,mBAC9CR,KADF,mBAAOS,EAAP,KAAyBC,EAAzB,KAaA,OATAC,qBAAU,WACR,SAASC,IACPF,EAAoBV,KAItB,OADAC,OAAOY,iBAAiB,SAAUD,GAC3B,kBAAMX,OAAOa,oBAAoB,SAAUF,MACjD,IAEIH,EAImBM,GAAlBX,EAAR,EAAQA,OAAQF,EAAhB,EAAgBA,MACR0C,EAAWrC,EAAM0J,MAAMC,OAAvBtH,OACR,EAAwBpC,mBAAQ,UAACD,EAAM4J,SAASzI,aAAhB,aAAC,EAAsBR,MAAvD,mBAAOA,EAAP,KAAaC,EAAb,KAKA,OACE,qBACEQ,MAAO,CAAEvB,OAAQA,EAAQF,MAAOA,GAChC0B,UAAU,4CAFZ,SAIGV,EACC,cAAC,EAAD,CAAMA,KAAMA,EAAM0B,OAAQA,IAE1B,cAAC,EAAD,CAAUA,OAAQA,EAAQiH,aAXb,SAAC3I,GAClBC,EAAQD,SClBGkJ,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjK,IACjC,cAAC,IAAD,CAAO+J,OAAK,EAACC,KAAK,WAAWC,UAAWP,UCCjCQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3c64f1cf.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport tw from \"twin.macro\";\n\nexport const Input = tw.input`\n  px-4\n  py-2\n  placeholder-gray-500\n  w-auto\n  lg:mx-auto\n  focus:ring-primary-100\n  focus:border-primary-500\n  border-gray-400\n  border-width[1px]\n  border-solid\n  rounded-md\n  shadow-xs\n`;\n\nexport const InputTextLeft = tw(Input)`text-left py-2`;\n\nexport const PrimaryButton = ({ className = \"\", children, ...rest }) => {\n  return (\n    <Button\n      className={`bg-primary-500 hover:bg-primary-300 text-white`}\n      {...rest}\n      data-testid=\"btn\"\n    >\n      {children}\n    </Button>\n  );\n};\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst Home = (props) => {\n  const { height, width } = useWindowDimensions();\n  const [room, setRoomName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const history = useHistory();\n  const handleClick = () => {\n    if (!room.length) {\n      history.push({\n        pathname: `/featured`,\n        state: { name },\n      });\n    } else {\n      history.push({\n        pathname: `/${room}`,\n        state: { name },\n      });\n    }\n  };\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"bg-black overflow-hidden fixed\"\n    >\n      <div className=\"text-white text-2xl text-center p-2 pb-6\">\n        lichessTV watch party\n      </div>\n      <div className=\"xl:w-full w-80 overflow-hidden p-4 m-auto md:pt-20 pt-10\">\n        <input\n          className=\"w-full h-10 pl-3 mb-4 text-base bg-gray-700 placeholder-white border rounded-lg focus:shadow-outline\"\n          id=\"message\"\n          type=\"text\"\n          label=\"Message\"\n          placeholder=\"create username\"\n          variant=\"outlined\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n        />\n        <div className=\"m-auto text-center text-white mb-8\">\n          <button\n            onClick={() => handleClick(\"\")}\n            className=\"border-white border-1 px-20 py-4 mt-4 rounded-lg\"\n          >\n            join featured room\n          </button>\n        </div>\n        <div className=\"text-white text-center p-2 pb-8\">\n          or enter a lichess.org game ID to create a room for a specific game in\n          play\n        </div>\n        <input\n          className=\"w-full h-10 pl-3 text-base bg-gray-700 placeholder-white border rounded-lg focus:shadow-outline\"\n          id=\"message\"\n          type=\"text\"\n          label=\"Message\"\n          placeholder=\"enter lichess game id\"\n          variant=\"outlined\"\n          value={room}\n          onChange={(event) => setRoomName(event.target.value)}\n        />\n      </div>\n      <div className=\"m-auto text-center text-white\">\n        <button\n          onClick={() => handleClick(name)}\n          className=\"border-white border-1 px-20 py-4 mt-6 rounded-lg\"\n        >\n          create custom room\n        </button>\n      </div>\n      <div className=\"text-center fixed w-full bottom-0 border-t-1 text-white p-4 flex\">\n        <a\n          href=\"https://lichess.org/api\"\n          className=\"lg:text-xl text-sm text-white underline m-auto\"\n        >\n          moves streamed using the lichess.org API\n        </a>\n        <h1 className=\"md:text-xl text-sm px-2\">-</h1>\n        <a\n          href=\"https://github.com/trevor-ofarrell/lichessTV-watch-party\"\n          className=\"lg:text-xl text-sm text-white underline m-auto\"\n        >\n          check out the source code on my GitHub\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\nconst NEW_CHAT_MESSAGE_EVENT = \"NEW_CHAT_MESSAGE_EVENT\";\nconst START_TYPING_MESSAGE_EVENT = \"START_TYPING_MESSAGE_EVENT\";\nconst STOP_TYPING_MESSAGE_EVENT = \"STOP_TYPING_MESSAGE_EVENT\";\n\nconst useChat = (roomId, name) => {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [user, setUser] = useState();\n  const socketRef = useRef();\n\n  const selectRandomColor = () => {\n    const colors = [\n      'text-green-500',\n      'text-purple-500',\n      'text-pink-500',\n      'text-red-500',\n      'text-red-700',\n      'text-blue-500',\n      'text-blue-300',\n      'text-green-400',\n      'text-pink-700',\n      'text-primary-500',\n      'text-orange-500',\n    ]\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  useEffect(() => {\n    const fetchUser = () => {\n      setUser({ name, color: selectRandomColor()});\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}/rooms/${roomId}/users`\n      );\n      const result = response.data.users;\n      setUsers(result);\n    };\n\n    fetchUsers();\n  }, [roomId]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}/rooms/${roomId}/messages`\n      );\n      const result = response.data.messages;\n      setMessages(result);\n    };\n\n    fetchMessages();\n  }, [roomId]);\n\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    socketRef.current = socketIOClient(process.env.REACT_APP_API_ENDPOINT, {\n      query: { roomId, name: user.name },\n    });\n\n    socketRef.current.on(\"connect\", () => {\n      console.log(socketRef.current.id);\n    });\n\n    socketRef.current.on(USER_JOIN_CHAT_EVENT, (user) => {\n      if (user.id === `${socketRef.current.id}${user.name}`) return;\n      setUsers((users) => [...users, user]);\n    });\n\n    socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\n      setUsers((users) => users.filter((u) => u.id !== user.id));\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser:\n          message.senderId === `${socketRef.current.id}${user.name}`,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    socketRef.current.on(START_TYPING_MESSAGE_EVENT, (typingInfo) => {\n      if (typingInfo.senderId !== `${socketRef.current.id}${user.name}`) {\n        const user = typingInfo.user;\n        setTypingUsers((users) => [...users, user]);\n      }\n    });\n\n    socketRef.current.on(STOP_TYPING_MESSAGE_EVENT, (typingInfo) => {\n      if (typingInfo.senderId !== `${socketRef.current.id}${user.name}`) {\n        const user = typingInfo.user;\n        setTypingUsers((users) => users.filter((u) => u.name !== user.name));\n      }\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId, user]);\n\n  const sendMessage = (messageBody, system) => {\n    if (!socketRef.current) return;\n    if (system === true) {\n      socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: socketRef.current.id,\n        name: user?.name,\n        system: system,\n      });\n    } else {\n      socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: `${socketRef.current.id}${user.name}`,\n        user: user,\n        name: user?.name,\n        color: user?.color,\n        system: system,\n      });\n    }\n  };\n\n  const startTypingMessage = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit(START_TYPING_MESSAGE_EVENT, {\n      senderId: socketRef.current.id,\n      user,\n    });\n  };\n\n  const stopTypingMessage = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit(STOP_TYPING_MESSAGE_EVENT, {\n      senderId: socketRef.current.id,\n      user,\n    });\n  };\n\n  const addUser = (name) => {\n    const user = { name };\n    setUsers((users) => [...users, user]);\n  };\n\n  return {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser,\n  };\n};\n\nexport default useChat;\n","import { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  const [isTyping, setIsTyping] = useState(false);\n  const [isKeyPressed, setIsKeyPressed] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  const startTyping = () => {\n    setIsKeyPressed(true);\n    setCountdown(5);\n    setIsTyping(true);\n  };\n\n  const stopTyping = () => {\n    setIsKeyPressed(false);\n  };\n\n  const cancelTyping = () => {\n    setCountdown(0);\n  };\n\n  useEffect(() => {\n    let interval;\n    if (!isKeyPressed) {\n      interval = setInterval(() => {\n        setCountdown((c) => c - 1);\n      }, 1000);\n    } else if (isKeyPressed || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    if (countdown === 0) {\n      setIsTyping(false);\n    }\n\n    return () => clearInterval(interval);\n  }, [isKeyPressed, countdown]);\n\n  return { isTyping, startTyping, stopTyping, cancelTyping };\n};\n\nexport default useTyping;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport tw from \"twin.macro\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\n\nexport const Input = tw.input`\n  px-4\n  py-2\n  placeholder-gray-500\n  w-auto\n  lg:mx-auto\n  focus:ring-primary-100\n  focus:border-primary-500\n  border-gray-400\n  border-width[1px]\n  border-solid\n  rounded-md\n  shadow-xs\n`;\n\nexport const InputTextLeft = tw(Input)`text-left py-2`;\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst Room = (props) => {\n  const { roomId, name } = props;\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\n  const { height, width } = useWindowDimensions();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [gameID, setGameID] = useState(\"\");\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState(\"\");\n  const [white, setWhite] = useState(\"\");\n  const messageRef = useRef();\n  const [listening, setListening] = useState(false);\n  const {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser,\n  } = useChat(roomId, name);\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = (event) => {\n    event.preventDefault();\n    cancelTyping();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage, false);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      if (newMessage !== \"\") {\n        sendMessage(newMessage, false);\n        setNewMessage(\"\");\n      }\n    }\n  };\n\n  const createPlayerNames = (user, setPlayer) => {\n    let username = \"\";\n    if (user.user.name) {\n      if (user.user.title) {\n        username = user.user.title + \" \" + user.user.name + \" \" + user.rating;\n      } else {\n        username = user.user.name + \" \" + user.rating;\n      }\n      setPlayer(username);\n    }\n  };\n\n  const selectRandomColor = () => {\n    colors = [\n      'text-green-400',\n      'text-purple-400',\n      'text-pink-400',\n      'text-red-400',\n      'text-blue-400',\n      'text-orange-400',\n    ]\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  useEffect(() => {\n    if (!listening) {\n      let source;\n      roomId !== \"featured\"\n        ? (source = new EventSource(\n            `${process.env.REACT_APP_API_ENDPOINT}/lichesstvcustom/?id=${roomId}`\n          ))\n        : (source = new EventSource(\n            `${process.env.REACT_APP_API_ENDPOINT}/lichesstv`\n          ));\n      if (roomId !== \"featured\") {\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          //console.log(event.data);\n          setFEN([parsedData.fen]);\n          if (parsedData.id) {\n            setGameID(parsedData.id);\n          }\n        };\n      } else {\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data);\n          setFEN([parsedData.d.fen]);\n          if (parsedData.d.players) {\n            createPlayerNames(parsedData.d.players[0], setWhite);\n            createPlayerNames(parsedData.d.players[1], setBlack);\n          }\n          if (parsedData.d.id) {\n            setGameID(parsedData.d.id);\n          }\n        };\n      }\n      setListening(true);\n    }\n  }, [listening, FEN]);\n\n  useEffect(() => {\n    if (isTyping) startTypingMessage();\n    else stopTypingMessage();\n  }, [isTyping]);\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-black overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <a href=\"/\" className=\"md:left-4 md:top-4 left-2 top-2 absolute md:pr-6 hidden md:flex\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"md:h-10 md:w-10 h-8 w-8 text-white\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n            />\n          </svg>\n        </a>\n        <div className=\"sm:mt-auto overflow-hidden m-auto mt-0\">\n          <div className=\"flex md:mt-2\">\n            <div className=\"flex mr-auto p-2 pl-0\">\n              <h1 className=\"md:text-xl text-sm text-white pr-1\">game:</h1>\n              <a\n                href={`https://lichess.org/${gameID}`}\n                className=\"md:text-xl text-sm text-white\"\n              >\n                lichess.org/{gameID}\n              </a>\n            </div>\n            <h1 className=\"md:text-xl text-sm text-white p-2 m-auto\">\n              room: {roomId}\n            </h1>\n          </div>\n          <div className=\"font-medium md:text-sm md:pl-0 text-xs pl-6 text-white max-w-50% text-left break-all hidden md:flex\">\n            FEN: {FEN}\n          </div>\n          <div className=\"m-auto\">\n            <div className=\"font-medium md:text-2xl text-lg my-1 text-white\">\n              {black}\n            </div>\n            <div className=\"m-auto\">\n              <Chessboard\n                position={FEN[0]}\n                transitionDuration={100}\n                showNotation={false}\n                calcWidth={(size) =>\n                  size.screenWidth < 1440\n                    ? (size.screenHeight / 100) * 46\n                    : size.screenWidth > 1440\n                    ? (size.screenHeight / 100) * 70\n                    : (screen.width / 100) * 100\n                }\n              />\n            </div>\n            <div className=\"font-medium md:text-2xl text-lg my-1 text-white\">\n              {\" \"}\n              {white}\n            </div>\n          </div>\n        </div>\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-black ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <>\n              <ol>\n                {messages.map((message, i) => (\n                  <li key={i}>\n                    {message.system === true ? (\n                      <div className=\"text-center text-gray-500 text-sm\">\n                        {message.body}\n                      </div>\n                    ) : (\n                      <span className=\"text-left text-white text-sm flex\">\n                        {message.name ? (\n                          <div className={`font-bold ${message.user.color} mr-1`}>\n                            {message.name}:\n                          </div>\n                        ) : (\n                          <>{\"\"}</>\n                        )}\n                        {message.body}\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ol>\n              <div className=\"xl:w-30% px-auto w-99 bottom-1 absolute\">\n                <input\n                  className=\"w-full h-10 pl-3 pr-8 text-base placeholder-white-600 border bg-gray-700 rounded-lg focus:shadow-outline\"\n                  id=\"message\"\n                  type=\"text\"\n                  label=\"Message\"\n                  placeholder=\"enter message here\"\n                  variant=\"outlined\"\n                  value={newMessage}\n                  onChange={handleNewMessageChange}\n                  onKeyUp={handleKeyUp}\n                />\n                <button\n                  className=\"absolute inset-y-0 h-10 right-0 flex items-center px-4 font-bold text-white bg-yellow-600 rounded-r-lg hover:bg-blue-500\"\n                  disabled={!newMessage}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSendMessage}\n                >\n                  Send\n                </button>\n              </div>\n            </>\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport tw from \"twin.macro\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\n\nexport const Input = tw.input`\n  px-4\n  py-2\n  placeholder-gray-500\n  w-auto\n  lg:mx-auto\n  focus:ring-primary-100\n  focus:border-primary-500\n  border-gray-400\n  border-width[1px]\n  border-solid\n  rounded-md\n  shadow-xs\n`;\n\nexport const InputTextLeft = tw(Input)`text-left py-2`;\n\nexport const PrimaryButton = ({ className = \"\", children, ...rest }) => {\n  return (\n    <Button\n      className={`bg-primary-500 hover:bg-primary-300 text-white`}\n      {...rest}\n      data-testid=\"btn\"\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const Button = ({ className = \"\", children, ...rest }) => {\n  return (\n    <button\n      className={`py-2 px-4 focus:outline-none ring-opacity-75 ring-primary-400 focus:ring text-lg rounded-md`}\n      {...rest}\n      data-testid=\"btn\"\n    >\n      {children}\n    </button>\n  );\n};\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst JoinChat = (props) => {\n  const { roomId, onNameUpdate } = props;\n  const [name, setName] = useState(\"\");\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\n  const { height, width } = useWindowDimensions();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState(\"\");\n  const [white, setWhite] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const messageRef = useRef();\n  const [listening, setListening] = useState(false);\n  const {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser,\n  } = useChat(roomId, name);\n\n  const handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      if (newMessage !== \"\") {\n        sendMessage(newMessage, false);\n        setNewMessage(\"\");\n      }\n    }\n  };\n\n  const createPlayerNames = (user, setPlayer) => {\n    let username = \"\";\n    if (user.user.name) {\n      if (user.user.title) {\n        username = user.user.title + \" \" + user.user.name + \" \" + user.rating;\n      } else {\n        username = user.user.name + \" \" + user.rating;\n      }\n      setPlayer(username);\n    }\n  };\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  useEffect(() => {\n    if (!listening) {\n      let source;\n      roomId !== \"featured\"\n        ? (source = new EventSource(\n            `${process.env.REACT_APP_API_ENDPOINT}/lichesstvcustom/?id=${roomId}`\n          ))\n        : (source = new EventSource(\n            `${process.env.REACT_APP_API_ENDPOINT}/lichesstv`\n          ));\n      if (roomId !== \"featured\") {\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data);\n          setFEN([parsedData.fen]);\n        };\n      } else {\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data);\n          setFEN([parsedData.d.fen]);\n          if (parsedData.d.players) {\n            createPlayerNames(parsedData.d.players[0], setWhite);\n            createPlayerNames(parsedData.d.players[1], setBlack);\n          }\n        };\n      }\n      setListening(true);\n    }\n  }, [listening, FEN]);\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-black overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <div className=\"sm:mt-auto overflow-hidden m-auto\">\n          <div className=\"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\">\n            FEN: {FEN}\n          </div>\n          <div className=\"m-auto\">\n            <div className=\"font-medium md:text-2xl text-lg my-1 text-white\">\n              {black}\n            </div>\n            <div className=\"m-auto\">\n              <Chessboard\n                position={FEN[0]}\n                transitionDuration={100}\n                showNotation={false}\n                calcWidth={(size) =>\n                  size.screenWidth < 1440\n                    ? (size.screenHeight / 100) * 46\n                    : size.screenWidth > 1440\n                    ? (size.screenHeight / 100) * 70\n                    : (screen.width / 100) * 100\n                }\n              />\n            </div>\n            <div className=\"font-medium md:text-2xl text-lg my-1 text-white\">\n              {\" \"}\n              {white}\n            </div>\n          </div>\n        </div>\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-black ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <h1 className=\"text-lg\">Room: {roomId}</h1>\n\n            <div className=\"m-auto xl:pt-12\">\n              <div className=\"font-bold text-white text-center text-lg px-4\">\n                Create a username to join the chat\n              </div>\n              <div>\n                <div className=\"xl:w-full w-80 overflow-hidden p-4 m-auto\">\n                  <input\n                    className=\"w-full h-10 pl-3 text-base bg-gray-700 placeholder-white border rounded-lg focus:shadow-outline\"\n                    id=\"message\"\n                    type=\"text\"\n                    label=\"Message\"\n                    placeholder=\"enter username\"\n                    variant=\"outlined\"\n                    value={userName}\n                    onChange={(event) => setUserName(event.target.value)}\n                  />\n                </div>\n              </div>\n              <button\n                className=\"h-12 m-auto flex items-center px-4 font-bold text-white bg-yellow-600 rounded-lg hover:bg-green-600 focus:bg-green-600\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setName(userName);\n                  onNameUpdate(userName);\n                  addUser(userName);\n                }}\n              >\n                Join Chat\n              </button>\n            </div>\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JoinChat;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Room from \"./Room\";\nimport JoinChat from \"./JoinChat\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst Chat = (props) => {\n  const { height, width } = useWindowDimensions();\n  const { roomId } = props.match.params;\n  const [name, setName] = useState(props.location.state?.name);\n\n  const updateName = (name) => {\n    setName(name);\n  };\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-gray-900 overflow-hidden fixed\"\n    >\n      {name ? (\n        <Room name={name} roomId={roomId} />\n      ) : (\n        <JoinChat roomId={roomId} onNameUpdate={updateName} />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport \"./index.css\";\nimport Chat from \"./Chat\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/:roomId\" component={Chat} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}