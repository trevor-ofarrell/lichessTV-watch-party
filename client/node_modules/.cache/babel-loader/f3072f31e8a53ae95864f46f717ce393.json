{"ast":null,"code":"var _jsxFileName = \"/home/d9/code/lichessTV-watch-party/client/src/Room.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport _styled from \"@emotion/styled\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Input = _styled.input({\n  \"paddingLeft\": \"1rem\",\n  \"paddingRight\": \"1rem\",\n  \"paddingTop\": \"0.5rem\",\n  \"paddingBottom\": \"0.5rem\",\n  \"::placeholder\": {\n    \"--tw-placeholder-opacity\": \"1\",\n    \"color\": \"rgba(160, 174, 192, var(--tw-placeholder-opacity))\"\n  },\n  \"width\": \"auto\",\n  \":focus\": {\n    \"--tw-ring-opacity\": \"1\",\n    \"--tw-ring-color\": \"rgba(162, 115, 255, var(--tw-ring-opacity))\",\n    \"--tw-border-opacity\": \"1\",\n    \"borderColor\": \"rgba(100, 21, 255, var(--tw-border-opacity))\"\n  },\n  \"--tw-border-opacity\": \"1\",\n  \"borderColor\": \"rgba(203, 213, 224, var(--tw-border-opacity))\",\n  \"borderWidth\": \"1px\",\n  \"borderStyle\": \"solid\",\n  \"borderRadius\": \"0.375rem\",\n  \"--tw-shadow\": \"0 0 0 1px rgba(0, 0, 0, 0.05)\",\n  \"boxShadow\": \"var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow)\",\n  \"@media (min-width: 1024px)\": {\n    \"marginLeft\": \"auto\",\n    \"marginRight\": \"auto\"\n  }\n});\nexport const InputTextLeft = _styled(Input)({\n  \"textAlign\": \"left\",\n  \"paddingTop\": \"0.5rem\",\n  \"paddingBottom\": \"0.5rem\"\n});\nexport const PrimaryButton = ({\n  className = \"\",\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: `bg-primary-500 hover:bg-primary-300 text-white`,\n    ...rest,\n    \"data-testid\": \"btn\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = PrimaryButton;\nexport const Button = ({\n  className = \"\",\n  children,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `py-2 px-4 focus:outline-none ring-opacity-75 ring-primary-400 focus:ring text-lg rounded-md`,\n    ...rest,\n    \"data-testid\": \"btn\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Button;\n\nconst getWindowDimensions = () => {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n};\n\nconst useWindowDimensions = () => {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n};\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nconst Room = props => {\n  _s2();\n\n  const {\n    roomId\n  } = props.match.params;\n  const {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser\n  } = useChat(roomId, name);\n  const {\n    isTyping,\n    startTyping,\n    stopTyping,\n    cancelTyping\n  } = useTyping();\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState(\"\");\n  const [white, setWhite] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const messageRef = useRef();\n  const [listening, setListening] = useState(false);\n  const [logged, setLogged] = useState(false);\n\n  if (props.location.state) {\n    const {\n      name,\n      room\n    } = props.location.state;\n  } else {\n    const name = \"\";\n  }\n\n  const handleNewMessageChange = event => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = event => {\n    event.preventDefault();\n    cancelTyping();\n\n    if (newMessage !== \"\") {\n      sendMessage(newMessage, false);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleKeyUp = event => {\n    if (event.key === \"Enter\") {\n      if (newMessage !== \"\") {\n        sendMessage(newMessage, false);\n        setNewMessage(\"\");\n      }\n    }\n  };\n\n  const createPlayerNames = (user, setPlayer) => {\n    let username = \"\";\n\n    if (user.user.name) {\n      if (user.user.title) {\n        username = user.user.title + \" \" + user.user.name + \" \" + user.rating;\n      } else {\n        username = user.user.name + \" \" + user.rating;\n      }\n\n      setPlayer(username);\n    }\n  };\n\n  useEffect(() => messageRef.current.scrollIntoView({\n    behavior: \"smooth\"\n  }));\n  useEffect(() => {\n    if (!listening) {\n      //const url = `https://${process.env.REACT_APP_API_ENDPOINT}/lichesstv`;\n      let source;\n      room ? source = new EventSource(`http://localhost:3030/lichesstvcustom/?id=${room}`) : source = new EventSource(`http://localhost:3030/lichesstv`);\n\n      if (room) {\n        source.onmessage = event => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data);\n          setFEN([parsedData.fen]);\n\n          if (parsedData.id) {\n            sendMessage(`Game in progress at https://lichess.org/${parsedData.id}`, true);\n          }\n        };\n      } else {\n        source.onmessage = event => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data);\n          setFEN([parsedData.d.fen]);\n\n          if (parsedData.d.players) {\n            createPlayerNames(parsedData.d.players[0], setWhite);\n            createPlayerNames(parsedData.d.players[1], setBlack);\n            sendMessage(`${parsedData.d.players[0].user.name} (white) VS. ${parsedData.d.players[1].user.name} (black)`, true);\n\n            if (parsedData.d.id) {\n              sendMessage(`Game in progress at https://lichess.org/${parsedData.d.id}`, true);\n            }\n          }\n        };\n      }\n\n      setListening(true);\n    }\n  }, [listening, FEN]);\n  useEffect(() => {\n    if (isTyping) startTypingMessage();else stopTypingMessage();\n  }, [isTyping]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: height,\n      width: width\n    },\n    className: \"ml-auto bg-gray-900 overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sm:mt-auto overflow-hidden m-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\",\n          children: [\"FEN: \", FEN]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium md:text-2xl text-lg my-1 text-white\",\n            children: black\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-auto\",\n            children: /*#__PURE__*/_jsxDEV(Chessboard, {\n              position: FEN[0],\n              transitionDuration: 100,\n              showNotation: false,\n              calcWidth: size => size.screenWidth < 1440 ? size.screenHeight / 100 * 46 : size.screenWidth > 1440 ? size.screenHeight / 100 * 70 : screen.width / 100 * 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-medium md:text-2xl text-lg my-1 text-white\",\n            children: [\" \", white]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-gray-900 ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full ml-1 mt-1 overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-lg\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), name ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n              children: messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: message.system === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center text-gray-500 text-sm\",\n                  children: message.body\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-left text-white text-sm flex\",\n                  children: [message.name ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"font-bold text-primary-400 mr-1\",\n                    children: [message.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: \"\"\n                  }, void 0, false), message.body]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 25\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"xl:w-30% px-auto w-99 bottom-1 absolute\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"w-full h-10 pl-3 pr-8 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline\",\n                id: \"message\",\n                type: \"text\",\n                label: \"Message\",\n                placeholder: \"enter message here\",\n                variant: \"outlined\",\n                value: newMessage,\n                onChange: handleNewMessageChange,\n                onKeyUp: handleKeyUp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"absolute inset-y-0 h-10 right-0 flex items-center px-4 font-bold text-white bg-purple-800 rounded-r-lg hover:bg-purple-900 focus:bg-purple-900\",\n                disabled: !newMessage,\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleSendMessage,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-auto xl:pt-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-bold text-white text-center text-lg px-4\",\n              children: \"Create a username to join the chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xl:w-full w-80 overflow-hidden p-4 m-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"w-full h-10 pl-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline\",\n                  id: \"message\",\n                  type: \"text\",\n                  label: \"Message\",\n                  placeholder: \"enter username\",\n                  variant: \"outlined\",\n                  value: userName,\n                  onChange: event => setUserName(event.target.value),\n                  onSubmit: () => {\n                    addUser(userName);\n                    setLogged(true);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"h-12 m-auto flex items-center px-4 font-bold text-white bg-green-500 rounded-lg hover:bg-green-600 focus:bg-green-600\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => {\n                setLogged(true);\n                sendMessage(`${userName} just joined the party! Welcome!`, true);\n              },\n              children: \"Join Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Room, \"eMGAXyrSnYQjx33o2F01szEQ0mE=\", false, function () {\n  return [useChat, useTyping, useWindowDimensions];\n});\n\n_c3 = Room;\nexport default Room;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrimaryButton\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"Room\");","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/Room.jsx"],"names":["React","useRef","useState","useEffect","Chessboard","useChat","useTyping","Input","tw","input","InputTextLeft","PrimaryButton","className","children","rest","Button","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Room","props","roomId","match","params","messages","user","users","typingUsers","sendMessage","startTypingMessage","stopTypingMessage","addUser","name","isTyping","startTyping","stopTyping","cancelTyping","newMessage","setNewMessage","FEN","setFEN","black","setBlack","white","setWhite","userName","setUserName","messageRef","listening","setListening","logged","setLogged","location","state","room","handleNewMessageChange","event","target","value","handleSendMessage","preventDefault","handleKeyUp","key","createPlayerNames","setPlayer","username","title","rating","current","scrollIntoView","behavior","source","EventSource","onmessage","parsedData","JSON","parse","data","console","log","fen","id","d","players","size","screenWidth","screenHeight","screen","map","message","i","system","body"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport tw from \"twin.macro\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\n\nexport const Input = tw.input`\n  px-4\n  py-2\n  placeholder-gray-500\n  w-auto\n  lg:mx-auto\n  focus:ring-primary-100\n  focus:border-primary-500\n  border-gray-400\n  border-width[1px]\n  border-solid\n  rounded-md\n  shadow-xs\n`;\n\nexport const InputTextLeft = tw(Input)`text-left py-2`;\n\nexport const PrimaryButton = ({ className = \"\", children, ...rest }) => {\n  return (\n    <Button\n      className={`bg-primary-500 hover:bg-primary-300 text-white`}\n      {...rest}\n      data-testid=\"btn\"\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport const Button = ({ className = \"\", children, ...rest }) => {\n  return (\n    <button\n      className={`py-2 px-4 focus:outline-none ring-opacity-75 ring-primary-400 focus:ring text-lg rounded-md`}\n      {...rest}\n      data-testid=\"btn\"\n    >\n      {children}\n    </button>\n  );\n};\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst Room = (props) => {\n  const { roomId } = props.match.params;\n  const {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser,\n  } = useChat(roomId, name);\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\n  const { height, width } = useWindowDimensions();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState(\"\");\n  const [white, setWhite] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const messageRef = useRef();\n  const [listening, setListening] = useState(false);\n  const [logged, setLogged] = useState(false);\n  if (props.location.state) {\n    const { name, room } = props.location.state;\n  } else {\n    const name = \"\"\n  }\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = (event) => {\n    event.preventDefault();\n    cancelTyping();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage, false);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      if (newMessage !== \"\") {\n        sendMessage(newMessage, false);\n        setNewMessage(\"\");\n      }\n    }\n  };\n\n  const createPlayerNames = (user, setPlayer) => {\n    let username = \"\";\n    if (user.user.name) {\n      if (user.user.title) {\n        username = user.user.title + \" \" + user.user.name + \" \" + user.rating;\n      } else {\n        username = user.user.name + \" \" + user.rating;\n      }\n      setPlayer(username);\n    }\n  };\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  useEffect(() => {\n    if (!listening) {\n      //const url = `https://${process.env.REACT_APP_API_ENDPOINT}/lichesstv`;\n      let source;\n      room\n        ? (source = new EventSource(`http://localhost:3030/lichesstvcustom/?id=${room}`))\n        : (source = new EventSource(`http://localhost:3030/lichesstv`));\n      if (room) {\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data)\n          setFEN([parsedData.fen]);\n          if (parsedData.id) {\n            sendMessage(\n              `Game in progress at https://lichess.org/${parsedData.id}`,\n              true\n            );\n          }\n        };\n      } else {\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          console.log(event.data)\n          setFEN([parsedData.d.fen]);\n          if (parsedData.d.players) {\n            createPlayerNames(parsedData.d.players[0], setWhite);\n            createPlayerNames(parsedData.d.players[1], setBlack);\n            sendMessage(\n              `${parsedData.d.players[0].user.name} (white) VS. ${parsedData.d.players[1].user.name} (black)`,\n              true\n            );\n            if (parsedData.d.id) {\n              sendMessage(\n                `Game in progress at https://lichess.org/${parsedData.d.id}`,\n                true\n              );\n            }\n          }\n        };\n      }\n      setListening(true);\n    }\n  }, [listening, FEN]);\n\n  useEffect(() => {\n    if (isTyping) startTypingMessage();\n    else stopTypingMessage();\n  }, [isTyping]);\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-gray-900 overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <div className=\"sm:mt-auto overflow-hidden m-auto\">\n          <div className=\"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\">\n            FEN: {FEN}\n          </div>\n          <div className=\"m-auto\">\n            <div className=\"font-medium md:text-2xl text-lg my-1 text-white\">\n              {black}\n            </div>\n            <div className=\"m-auto\">\n              <Chessboard\n                position={FEN[0]}\n                transitionDuration={100}\n                showNotation={false}\n                calcWidth={(size) =>\n                  size.screenWidth < 1440\n                    ? (size.screenHeight / 100) * 46\n                    : size.screenWidth > 1440\n                    ? (size.screenHeight / 100) * 70\n                    : (screen.width / 100) * 100\n                }\n              />\n            </div>\n            <div className=\"font-medium md:text-2xl text-lg my-1 text-white\">\n              {\" \"}\n              {white}\n            </div>\n          </div>\n        </div>\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-gray-900 ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <h1 className=\"text-lg\">Room: {roomId}</h1>\n            {name ? (\n              <>\n                <ol>\n                  {messages.map((message, i) => (\n                    <li key={i}>\n                      {message.system === true ? (\n                        <div className=\"text-center text-gray-500 text-sm\">\n                          {message.body}\n                        </div>\n                      ) : (\n                        <span className=\"text-left text-white text-sm flex\">\n                          {message.name ? (\n                            <div className=\"font-bold text-primary-400 mr-1\">\n                              {message.name}:\n                            </div>\n                          ) : (\n                            <>{\"\"}</>\n                          )}\n                          {message.body}\n                        </span>\n                      )}\n                    </li>\n                  ))}\n                </ol>\n                <div className=\"xl:w-30% px-auto w-99 bottom-1 absolute\">\n                  <input\n                    className=\"w-full h-10 pl-3 pr-8 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline\"\n                    id=\"message\"\n                    type=\"text\"\n                    label=\"Message\"\n                    placeholder=\"enter message here\"\n                    variant=\"outlined\"\n                    value={newMessage}\n                    onChange={handleNewMessageChange}\n                    onKeyUp={handleKeyUp}\n                  />\n                  <button\n                    className=\"absolute inset-y-0 h-10 right-0 flex items-center px-4 font-bold text-white bg-purple-800 rounded-r-lg hover:bg-purple-900 focus:bg-purple-900\"\n                    disabled={!newMessage}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSendMessage}\n                  >\n                    Send\n                  </button>\n                </div>\n              </>\n            ) : (\n              <div className=\"m-auto xl:pt-12\">\n                <div className=\"font-bold text-white text-center text-lg px-4\">\n                  Create a username to join the chat\n                </div>\n                <div>\n                  <div className=\"xl:w-full w-80 overflow-hidden p-4 m-auto\">\n                    <input\n                      className=\"w-full h-10 pl-3 text-base placeholder-gray-600 border rounded-lg focus:shadow-outline\"\n                      id=\"message\"\n                      type=\"text\"\n                      label=\"Message\"\n                      placeholder=\"enter username\"\n                      variant=\"outlined\"\n                      value={userName}\n                      onChange={(event) => setUserName(event.target.value)}\n                      onSubmit={() => {\n                        addUser(userName);\n                        setLogged(true);\n                      }}\n                    />\n                  </div>\n                </div>\n                <button\n                  className=\"h-12 m-auto flex items-center px-4 font-bold text-white bg-green-500 rounded-lg hover:bg-green-600 focus:bg-green-600\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setLogged(true);\n                    sendMessage(\n                      `${userName} just joined the party! Welcome!`,\n                      true\n                    );\n                  }}\n                >\n                  Join Chat\n                </button>\n              </div>\n            )}\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}