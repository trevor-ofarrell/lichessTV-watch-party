{"ast":null,"code":"import _objectSpread from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useRef,useState}from\"react\";import socketIOClient from\"socket.io-client\";import axios from\"axios\";var USER_JOIN_CHAT_EVENT=\"USER_JOIN_CHAT_EVENT\";var USER_LEAVE_CHAT_EVENT=\"USER_LEAVE_CHAT_EVENT\";var NEW_CHAT_MESSAGE_EVENT=\"NEW_CHAT_MESSAGE_EVENT\";var START_TYPING_MESSAGE_EVENT=\"START_TYPING_MESSAGE_EVENT\";var STOP_TYPING_MESSAGE_EVENT=\"STOP_TYPING_MESSAGE_EVENT\";var useChat=function useChat(roomId,name){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),users=_useState4[0],setUsers=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),typingUsers=_useState6[0],setTypingUsers=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),user=_useState8[0],setUser=_useState8[1];var socketRef=useRef();var selectRandomColor=function selectRandomColor(){var colors=['text-green-500','text-purple-500','text-pink-500','text-red-500','text-red-700','text-blue-500','text-blue-300','text-green-400','text-pink-700','text-primary-500','text-orange-500'];return colors[Math.floor(Math.random()*colors.length)];};useEffect(function(){var fetchUser=function fetchUser(){setUser({name:name,color:selectRandomColor()});};fetchUser();},[]);useEffect(function(){var fetchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/rooms/\").concat(roomId,\"/users\"));case 2:response=_context.sent;result=response.data.users;setUsers(result);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchUsers(){return _ref.apply(this,arguments);};}();fetchUsers();},[roomId]);useEffect(function(){var fetchMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/rooms/\").concat(roomId,\"/messages\"));case 2:response=_context2.sent;result=response.data.messages;setMessages(result);case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchMessages(){return _ref2.apply(this,arguments);};}();fetchMessages();},[roomId]);useEffect(function(){if(!user){return;}socketRef.current=socketIOClient(process.env.REACT_APP_API_ENDPOINT,{query:{roomId:roomId,name:user.name}});socketRef.current.on(\"connect\",function(){console.log(socketRef.current.id);});socketRef.current.on(USER_JOIN_CHAT_EVENT,function(user){if(user.id===\"\".concat(socketRef.current.id).concat(user.name))return;setUsers(function(users){return[].concat(_toConsumableArray(users),[user]);});});socketRef.current.on(USER_LEAVE_CHAT_EVENT,function(user){setUsers(function(users){return users.filter(function(u){return u.id!==user.id;});});});socketRef.current.on(NEW_CHAT_MESSAGE_EVENT,function(message){var incomingMessage=_objectSpread(_objectSpread({},message),{},{ownedByCurrentUser:message.senderId===\"\".concat(socketRef.current.id).concat(user.name)});setMessages(function(messages){return[].concat(_toConsumableArray(messages),[incomingMessage]);});});socketRef.current.on(START_TYPING_MESSAGE_EVENT,function(typingInfo){if(typingInfo.senderId!==\"\".concat(socketRef.current.id).concat(user.name)){var _user=typingInfo.user;setTypingUsers(function(users){return[].concat(_toConsumableArray(users),[_user]);});}});socketRef.current.on(STOP_TYPING_MESSAGE_EVENT,function(typingInfo){if(typingInfo.senderId!==\"\".concat(socketRef.current.id).concat(user.name)){var _user2=typingInfo.user;setTypingUsers(function(users){return users.filter(function(u){return u.name!==_user2.name;});});}});return function(){socketRef.current.disconnect();};},[roomId,user]);var sendMessage=function sendMessage(messageBody,system){if(!socketRef.current)return;if(system===true){socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT,{body:messageBody,senderId:socketRef.current.id,name:user===null||user===void 0?void 0:user.name,system:system});}else{socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT,{body:messageBody,senderId:\"\".concat(socketRef.current.id).concat(user.name),user:user,name:user===null||user===void 0?void 0:user.name,color:user===null||user===void 0?void 0:user.color,system:system});}};var startTypingMessage=function startTypingMessage(){if(!socketRef.current)return;socketRef.current.emit(START_TYPING_MESSAGE_EVENT,{senderId:socketRef.current.id,user:user});};var stopTypingMessage=function stopTypingMessage(){if(!socketRef.current)return;socketRef.current.emit(STOP_TYPING_MESSAGE_EVENT,{senderId:socketRef.current.id,user:user});};var addUser=function addUser(name){var user={name:name};setUsers(function(users){return[].concat(_toConsumableArray(users),[user]);});};return{messages:messages,user:user,users:users,typingUsers:typingUsers,sendMessage:sendMessage,startTypingMessage:startTypingMessage,stopTypingMessage:stopTypingMessage,addUser:addUser};};export default useChat;","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/useChat.js"],"names":["useEffect","useRef","useState","socketIOClient","axios","USER_JOIN_CHAT_EVENT","USER_LEAVE_CHAT_EVENT","NEW_CHAT_MESSAGE_EVENT","START_TYPING_MESSAGE_EVENT","STOP_TYPING_MESSAGE_EVENT","useChat","roomId","name","messages","setMessages","users","setUsers","typingUsers","setTypingUsers","user","setUser","socketRef","selectRandomColor","colors","Math","floor","random","length","fetchUser","color","fetchUsers","get","process","env","REACT_APP_API_ENDPOINT","response","result","data","fetchMessages","current","query","on","console","log","id","filter","u","message","incomingMessage","ownedByCurrentUser","senderId","typingInfo","disconnect","sendMessage","messageBody","system","emit","body","startTypingMessage","stopTypingMessage","addUser"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport axios from \"axios\";\n\nconst USER_JOIN_CHAT_EVENT = \"USER_JOIN_CHAT_EVENT\";\nconst USER_LEAVE_CHAT_EVENT = \"USER_LEAVE_CHAT_EVENT\";\nconst NEW_CHAT_MESSAGE_EVENT = \"NEW_CHAT_MESSAGE_EVENT\";\nconst START_TYPING_MESSAGE_EVENT = \"START_TYPING_MESSAGE_EVENT\";\nconst STOP_TYPING_MESSAGE_EVENT = \"STOP_TYPING_MESSAGE_EVENT\";\n\nconst useChat = (roomId, name) => {\n  const [messages, setMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [user, setUser] = useState();\n  const socketRef = useRef();\n\n  const selectRandomColor = () => {\n    const colors = [\n      'text-green-500',\n      'text-purple-500',\n      'text-pink-500',\n      'text-red-500',\n      'text-red-700',\n      'text-blue-500',\n      'text-blue-300',\n      'text-green-400',\n      'text-pink-700',\n      'text-primary-500',\n      'text-orange-500',\n    ]\n    return colors[Math.floor(Math.random() * colors.length)];\n  }\n\n  useEffect(() => {\n    const fetchUser = () => {\n      setUser({ name, color: selectRandomColor()});\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}/rooms/${roomId}/users`\n      );\n      const result = response.data.users;\n      setUsers(result);\n    };\n\n    fetchUsers();\n  }, [roomId]);\n\n  useEffect(() => {\n    const fetchMessages = async () => {\n      const response = await axios.get(\n        `${process.env.REACT_APP_API_ENDPOINT}/rooms/${roomId}/messages`\n      );\n      const result = response.data.messages;\n      setMessages(result);\n    };\n\n    fetchMessages();\n  }, [roomId]);\n\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    socketRef.current = socketIOClient(process.env.REACT_APP_API_ENDPOINT, {\n      query: { roomId, name: user.name },\n    });\n\n    socketRef.current.on(\"connect\", () => {\n      console.log(socketRef.current.id);\n    });\n\n    socketRef.current.on(USER_JOIN_CHAT_EVENT, (user) => {\n      if (user.id === `${socketRef.current.id}${user.name}`) return;\n      setUsers((users) => [...users, user]);\n    });\n\n    socketRef.current.on(USER_LEAVE_CHAT_EVENT, (user) => {\n      setUsers((users) => users.filter((u) => u.id !== user.id));\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        ownedByCurrentUser:\n          message.senderId === `${socketRef.current.id}${user.name}`,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    socketRef.current.on(START_TYPING_MESSAGE_EVENT, (typingInfo) => {\n      if (typingInfo.senderId !== `${socketRef.current.id}${user.name}`) {\n        const user = typingInfo.user;\n        setTypingUsers((users) => [...users, user]);\n      }\n    });\n\n    socketRef.current.on(STOP_TYPING_MESSAGE_EVENT, (typingInfo) => {\n      if (typingInfo.senderId !== `${socketRef.current.id}${user.name}`) {\n        const user = typingInfo.user;\n        setTypingUsers((users) => users.filter((u) => u.name !== user.name));\n      }\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId, user]);\n\n  const sendMessage = (messageBody, system) => {\n    if (!socketRef.current) return;\n    if (system === true) {\n      socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: socketRef.current.id,\n        name: user?.name,\n        system: system,\n      });\n    } else {\n      socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n        body: messageBody,\n        senderId: `${socketRef.current.id}${user.name}`,\n        user: user,\n        name: user?.name,\n        color: user?.color,\n        system: system,\n      });\n    }\n  };\n\n  const startTypingMessage = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit(START_TYPING_MESSAGE_EVENT, {\n      senderId: socketRef.current.id,\n      user,\n    });\n  };\n\n  const stopTypingMessage = () => {\n    if (!socketRef.current) return;\n    socketRef.current.emit(STOP_TYPING_MESSAGE_EVENT, {\n      senderId: socketRef.current.id,\n      user,\n    });\n  };\n\n  const addUser = (name) => {\n    const user = { name };\n    setUsers((users) => [...users, user]);\n  };\n\n  return {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n    addUser,\n  };\n};\n\nexport default useChat;\n"]},"metadata":{},"sourceType":"module"}