{"ast":null,"code":"var _jsxFileName = \"/home/d9/code/lichessTV-watch-party/client/src/Chat.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Room from \"./Room\";\nimport JoinChat from \"./JoinChat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getWindowDimensions = () => {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n};\n\nconst useWindowDimensions = () => {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n  return windowDimensions;\n};\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nconst Chat = props => {\n  _s2();\n\n  var _props$location$state;\n\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const {\n    roomId\n  } = props.match.params;\n  const [name, setName] = useState((_props$location$state = props.location.state) === null || _props$location$state === void 0 ? void 0 : _props$location$state.name);\n\n  const updateName = name => {\n    setName(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: height,\n      width: width\n    },\n    className: \"ml-auto bg-gray-900 overflow-hidden\",\n    children: name ? /*#__PURE__*/_jsxDEV(Room, {\n      name: name,\n      roomId: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(JoinChat, {\n      roomId: roomId,\n      onNameUpdate: updateName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Chat, \"ffi+hBOQnzIJFWphaYRL6cYR20A=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/Chat.jsx"],"names":["React","useRef","useState","useEffect","Room","JoinChat","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Chat","props","roomId","match","params","name","setName","location","state","updateName"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAChC,QAAM;AAAEC,IAAAA,UAAU,EAAEC,KAAd;AAAqBC,IAAAA,WAAW,EAAEC;AAAlC,MAA6CC,MAAnD;AACA,SAAO;AACLH,IAAAA,KADK;AAELE,IAAAA;AAFK,GAAP;AAID,CAND;;AAQA,MAAME,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CACtDI,mBAAmB,EADmC,CAAxD;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACd,aAASY,YAAT,GAAwB;AACtBD,MAAAA,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB;AACD;;AAEDK,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMJ,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GAPQ,EAON,EAPM,CAAT;AASA,SAAOF,gBAAP;AACD,CAfD;;GAAMD,mB;;AAiBN,MAAMM,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAAA;;AACtB,QAAM;AAAET,IAAAA,MAAF;AAAUF,IAAAA;AAAV,MAAoBI,mBAAmB,EAA7C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAaD,KAAK,CAACE,KAAN,CAAYC,MAA/B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,0BAACiB,KAAK,CAACM,QAAN,CAAeC,KAAhB,0DAAC,sBAAsBH,IAAvB,CAAhC;;AAEA,QAAMI,UAAU,GAAIJ,IAAD,IAAU;AAC3BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAFD;;AAGA,sBACE;AACE,IAAA,KAAK,EAAE;AAAEb,MAAAA,MAAM,EAAEA,MAAV;AAAkBF,MAAAA,KAAK,EAAEA;AAAzB,KADT;AAEE,IAAA,SAAS,EAAC,qCAFZ;AAAA,cAIGe,IAAI,gBACH,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,MAAM,EAAEH;AAA1B;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEA,MAAlB;AAA0B,MAAA,YAAY,EAAEO;AAAxC;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CApBD;;IAAMT,I;UACsBN,mB;;;KADtBM,I;AAsBN,eAAeA,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Room from \"./Room\";\nimport JoinChat from \"./JoinChat\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst Chat = (props) => {\n  const { height, width } = useWindowDimensions();\n  const { roomId } = props.match.params;\n  const [name, setName] = useState(props.location.state?.name);\n\n  const updateName = (name) => {\n    setName(name);\n  };\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-gray-900 overflow-hidden\"\n    >\n      {name ? (\n        <Room name={name} roomId={roomId} />\n      ) : (\n        <JoinChat roomId={roomId} onNameUpdate={updateName} />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}