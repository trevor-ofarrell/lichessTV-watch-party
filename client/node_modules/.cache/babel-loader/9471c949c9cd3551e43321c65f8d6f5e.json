{"ast":null,"code":"import _slicedToArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";var useTyping=function useTyping(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isTyping=_useState2[0],setIsTyping=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isKeyPressed=_useState4[0],setIsKeyPressed=_useState4[1];var _useState5=useState(5),_useState6=_slicedToArray(_useState5,2),countdown=_useState6[0],setCountdown=_useState6[1];var startTyping=function startTyping(){setIsKeyPressed(true);setCountdown(5);setIsTyping(true);};var stopTyping=function stopTyping(){setIsKeyPressed(false);};var cancelTyping=function cancelTyping(){setCountdown(0);};useEffect(function(){var interval;if(!isKeyPressed){interval=setInterval(function(){setCountdown(function(c){return c-1;});},1000);}else if(isKeyPressed||countdown===0){clearInterval(interval);}if(countdown===0){setIsTyping(false);}return function(){return clearInterval(interval);};},[isKeyPressed,countdown]);return{isTyping:isTyping,startTyping:startTyping,stopTyping:stopTyping,cancelTyping:cancelTyping};};export default useTyping;","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/useTyping.js"],"names":["useEffect","useState","useTyping","isTyping","setIsTyping","isKeyPressed","setIsKeyPressed","countdown","setCountdown","startTyping","stopTyping","cancelTyping","interval","setInterval","c","clearInterval"],"mappings":"iKAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,cAAgCD,QAAQ,CAAC,KAAD,CAAxC,wCAAOE,QAAP,eAAiBC,WAAjB,eACA,eAAwCH,QAAQ,CAAC,KAAD,CAAhD,yCAAOI,YAAP,eAAqBC,eAArB,eACA,eAAkCL,QAAQ,CAAC,CAAD,CAA1C,yCAAOM,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBH,eAAe,CAAC,IAAD,CAAf,CACAE,YAAY,CAAC,CAAD,CAAZ,CACAJ,WAAW,CAAC,IAAD,CAAX,CACD,CAJD,CAMA,GAAMM,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBJ,eAAe,CAAC,KAAD,CAAf,CACD,CAFD,CAIA,GAAMK,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBH,YAAY,CAAC,CAAD,CAAZ,CACD,CAFD,CAIAR,SAAS,CAAC,UAAM,CACd,GAAIY,CAAAA,QAAJ,CACA,GAAI,CAACP,YAAL,CAAmB,CACjBO,QAAQ,CAAGC,WAAW,CAAC,UAAM,CAC3BL,YAAY,CAAC,SAACM,CAAD,QAAOA,CAAAA,CAAC,CAAG,CAAX,EAAD,CAAZ,CACD,CAFqB,CAEnB,IAFmB,CAAtB,CAGD,CAJD,IAIO,IAAIT,YAAY,EAAIE,SAAS,GAAK,CAAlC,CAAqC,CAC1CQ,aAAa,CAACH,QAAD,CAAb,CACD,CAED,GAAIL,SAAS,GAAK,CAAlB,CAAqB,CACnBH,WAAW,CAAC,KAAD,CAAX,CACD,CAED,MAAO,kBAAMW,CAAAA,aAAa,CAACH,QAAD,CAAnB,EAAP,CACD,CAfQ,CAeN,CAACP,YAAD,CAAeE,SAAf,CAfM,CAAT,CAiBA,MAAO,CAAEJ,QAAQ,CAARA,QAAF,CAAYM,WAAW,CAAXA,WAAZ,CAAyBC,UAAU,CAAVA,UAAzB,CAAqCC,YAAY,CAAZA,YAArC,CAAP,CACD,CArCD,CAuCA,cAAeT,CAAAA,SAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useTyping = () => {\n  const [isTyping, setIsTyping] = useState(false);\n  const [isKeyPressed, setIsKeyPressed] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  const startTyping = () => {\n    setIsKeyPressed(true);\n    setCountdown(5);\n    setIsTyping(true);\n  };\n\n  const stopTyping = () => {\n    setIsKeyPressed(false);\n  };\n\n  const cancelTyping = () => {\n    setCountdown(0);\n  };\n\n  useEffect(() => {\n    let interval;\n    if (!isKeyPressed) {\n      interval = setInterval(() => {\n        setCountdown((c) => c - 1);\n      }, 1000);\n    } else if (isKeyPressed || countdown === 0) {\n      clearInterval(interval);\n    }\n\n    if (countdown === 0) {\n      setIsTyping(false);\n    }\n\n    return () => clearInterval(interval);\n  }, [isKeyPressed, countdown]);\n\n  return { isTyping, startTyping, stopTyping, cancelTyping };\n};\n\nexport default useTyping;\n"]},"metadata":{},"sourceType":"module"}