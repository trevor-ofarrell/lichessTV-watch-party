{"ast":null,"code":"import _regeneratorRuntime from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Chessboard from\"chessboardjsx\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var createPlayerObject=function createPlayerObject(user,setPlayer){setPlayer({name:user.user.name,title:user.user.title,rating:String(user.rating)});};export var Board=function Board(props){var roomId=props.roomId;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),FEN=_useState2[0],setFEN=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),black=_useState4[0],setBlack=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),white=_useState6[0],setWhite=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),listening=_useState8[0],setListening=_useState8[1];var pgnData={};useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var source;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(listening){_context.next=14;break;}if(!(roomId!==\"featured\")){_context.next=11;break;}if(!(pgnData.id!==roomId)){_context.next=7;break;}_context.next=5;return fetch(\"http://localhost:3030/pgn/?id=\".concat(roomId)).then(function(res){return res.json();});case 5:pgnData=_context.sent;if(pgnData.players.black){createPlayerObject(pgnData.players.white,setWhite);createPlayerObject(pgnData.players.black,setBlack);}case 7:source=new EventSource(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/lichesstvcustom/?id=\").concat(roomId));source.onmessage=function(event){var parsedData=JSON.parse(event.data);setFEN([parsedData.fen]);};_context.next=13;break;case 11:source=new EventSource(\"\".concat(process.env.REACT_APP_API_ENDPOINT,\"/lichesstv\"));source.onmessage=function(event){var parsedData=JSON.parse(event.data);setFEN([parsedData.d.fen]);if(parsedData.d.players){createPlayerObject(parsedData.d.players[0],setWhite);createPlayerObject(parsedData.d.players[1],setBlack);}};case 13:setListening(true);case 14:case\"end\":return _context.stop();}}},_callee);})),[listening,FEN]);return/*#__PURE__*/_jsxs(\"div\",{className:\"sm:mt-auto overflow-hidden m-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\",children:[\"FEN: \",FEN]}),/*#__PURE__*/_jsxs(\"div\",{className:\"m-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex font-medium md:text-2xl text-lg my-1 text-white\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-scheme-orange\",children:[black.title,\"\\xA0\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[black.name,\"\\xA0\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500\",children:black.rating})]}),/*#__PURE__*/_jsx(\"div\",{className:\"m-auto\",children:/*#__PURE__*/_jsx(Chessboard,{position:FEN[0],transitionDuration:100,showNotation:false,calcWidth:function calcWidth(size){return size.screenWidth<1440?size.screenHeight/100*46:size.screenWidth>1440?size.screenHeight/100*70:screen.width/100*100;}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex font-medium md:text-2xl text-lg my-1 text-white\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-scheme-orange\",children:[white.title,\"\\xA0\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[white.name,\"\\xA0\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500\",children:white.rating})]})]})]});};","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/components/Board.js"],"names":["React","useState","useEffect","Chessboard","createPlayerObject","user","setPlayer","name","title","rating","String","Board","props","roomId","FEN","setFEN","black","setBlack","white","setWhite","listening","setListening","pgnData","id","fetch","then","res","json","players","source","EventSource","process","env","REACT_APP_API_ENDPOINT","onmessage","event","parsedData","JSON","parse","data","fen","d","size","screenWidth","screenHeight","screen","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\n\nconst createPlayerObject = (user, setPlayer) => {\n  setPlayer({\n    name: user.user.name,\n    title: user.user.title,\n    rating: String(user.rating),\n  });\n};\n\nexport const Board = (props) => {\n  const { roomId } = props;\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState({});\n  const [white, setWhite] = useState({});\n  const [listening, setListening] = useState(false);\n\n  let pgnData = {};\n  useEffect(async () => {\n    if (!listening) {\n      let source;\n      if (roomId !== \"featured\") {\n        if (pgnData.id !== roomId) {\n          pgnData = await fetch(\n            `http://localhost:3030/pgn/?id=${roomId}`\n          ).then((res) => res.json());\n          if (pgnData.players.black) {\n            createPlayerObject(pgnData.players.white, setWhite);\n            createPlayerObject(pgnData.players.black, setBlack);\n          }\n        }\n        source = new EventSource(\n          `${process.env.REACT_APP_API_ENDPOINT}/lichesstvcustom/?id=${roomId}`\n        );\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.fen]);\n        };\n      } else {\n        source = new EventSource(\n          `${process.env.REACT_APP_API_ENDPOINT}/lichesstv`\n        );\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.d.fen]);\n          if (parsedData.d.players) {\n            createPlayerObject(parsedData.d.players[0], setWhite);\n            createPlayerObject(parsedData.d.players[1], setBlack);\n          }\n        };\n      }\n      setListening(true);\n    }\n  }, [listening, FEN]);\n\n  return (\n    <div className=\"sm:mt-auto overflow-hidden m-auto\">\n      <div className=\"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\">\n        FEN: {FEN}\n      </div>\n      <div className=\"m-auto\">\n        <div className=\"flex font-medium md:text-2xl text-lg my-1 text-white\">\n          <div className=\"text-scheme-orange\">{black.title}&nbsp;</div>\n          <div>{black.name}&nbsp;</div>\n          <div className=\"text-gray-500\">{black.rating}</div>\n        </div>\n        <div className=\"m-auto\">\n          <Chessboard\n            position={FEN[0]}\n            transitionDuration={100}\n            showNotation={false}\n            calcWidth={(size) =>\n              size.screenWidth < 1440\n                ? (size.screenHeight / 100) * 46\n                : size.screenWidth > 1440\n                ? (size.screenHeight / 100) * 70\n                : (screen.width / 100) * 100\n            }\n          />\n        </div>\n        <div className=\"flex font-medium md:text-2xl text-lg my-1 text-white\">\n          <div className=\"text-scheme-orange\">{white.title}&nbsp;</div>\n          <div>{white.name}&nbsp;</div>\n          <div className=\"text-gray-500\">{white.rating}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}