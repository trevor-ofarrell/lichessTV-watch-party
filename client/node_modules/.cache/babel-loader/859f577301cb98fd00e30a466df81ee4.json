{"ast":null,"code":"import _slicedToArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from\"react\";import useChat from\"./useChat\";import useTyping from\"./useTyping\";import useWindowDimensions from\"./hooks/WindowDimensions\";import{Board}from\"./components/Board\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Room=function Room(props){var roomId=props.roomId,name=props.name;var _useTyping=useTyping(),isTyping=_useTyping.isTyping,startTyping=_useTyping.startTyping,stopTyping=_useTyping.stopTyping,cancelTyping=_useTyping.cancelTyping;var _useWindowDimensions=useWindowDimensions(),height=_useWindowDimensions.height,width=_useWindowDimensions.width;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),newMessage=_useState2[0],setNewMessage=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),gameID=_useState4[0],setGameID=_useState4[1];var messageRef=useRef();var _useChat=useChat(roomId,name),messages=_useChat.messages,user=_useChat.user,users=_useChat.users,typingUsers=_useChat.typingUsers,sendMessage=_useChat.sendMessage,startTypingMessage=_useChat.startTypingMessage,stopTypingMessage=_useChat.stopTypingMessage;var handleNewMessageChange=function handleNewMessageChange(event){setNewMessage(event.target.value);};var handleSendMessage=function handleSendMessage(event){event.preventDefault();cancelTyping();if(newMessage!==\"\"){sendMessage(newMessage,false);setNewMessage(\"\");}};var handleKeyUp=function handleKeyUp(event){if(event.key===\"Enter\"){if(newMessage!==\"\"){sendMessage(newMessage,false);setNewMessage(\"\");}}};useEffect(function(){return messageRef.current.scrollIntoView({behavior:\"smooth\"});});useEffect(function(){if(isTyping)startTypingMessage();else stopTypingMessage();},[isTyping]);return/*#__PURE__*/_jsx(\"div\",{style:{height:height,width:width},className:\"ml-auto bg-scheme-dark overflow-hidden\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\",children:[/*#__PURE__*/_jsx(\"a\",{href:\"/\",className:\"md:left-4 md:top-4 left-2 top-2 absolute md:pr-6 hidden md:flex\",children:/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"md:h-10 md:w-10 h-8 w-8 text-scheme-orange\",fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sm:mt-auto overflow-hidden m-auto mt-0\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex md:mt-2 text-gray-400\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex mr-auto p-2 pl-0\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"md:text-xl text-sm pr-1\",children:\"game:\"}),/*#__PURE__*/_jsxs(\"a\",{href:\"https://lichess.org/\".concat(gameID),className:\"md:text-xl text-sm underline  \",children:[\"lichess.org/\",gameID]})]}),/*#__PURE__*/_jsxs(\"h1\",{className:\"md:text-xl text-sm p-2 ml-auto\",children:[\"room: \",roomId]})]}),/*#__PURE__*/_jsx(Board,{roomId:roomId})]}),/*#__PURE__*/_jsx(\"div\",{className:\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-scheme-dark ml-auto\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"h-full ml-1 mt-1 overflow-y-auto\",children:[/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"ol\",{children:messages.map(function(message,i){return/*#__PURE__*/_jsx(\"li\",{children:message.system===true?/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-gray-500 text-sm\",children:message.body}):/*#__PURE__*/_jsxs(\"span\",{className:\"text-left text-white text-sm flex\",children:[message.name?/*#__PURE__*/_jsxs(\"div\",{className:\"font-bold \".concat(message.user.color,\" mr-1\"),children:[message.name,\":\"]}):/*#__PURE__*/_jsx(_Fragment,{children:\"\"}),message.body]})},i);})}),/*#__PURE__*/_jsxs(\"div\",{className:\"xl:w-30% px-auto w-99 bottom-1 absolute\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"w-full h-10 pl-3 pr-8 text-base placeholder-white-600 text-gray-500 border bg-scheme-light rounded-lg\",id:\"message\",type:\"text\",label:\"Message\",placeholder:\"enter message here\",variant:\"outlined\",value:newMessage,onChange:handleNewMessageChange,onKeyUp:handleKeyUp}),/*#__PURE__*/_jsx(\"button\",{className:\"absolute inset-y-0 h-10 right-0 flex items-center px-4 font-bold text-white bg-scheme-orange rounded-r-lg\",disabled:!newMessage,variant:\"contained\",color:\"primary\",onClick:handleSendMessage,children:\"Send\"})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:messageRef})]})})]})});};export default Room;","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/Room.jsx"],"names":["React","useRef","useState","useEffect","useChat","useTyping","useWindowDimensions","Board","Room","props","roomId","name","isTyping","startTyping","stopTyping","cancelTyping","height","width","newMessage","setNewMessage","gameID","setGameID","messageRef","messages","user","users","typingUsers","sendMessage","startTypingMessage","stopTypingMessage","handleNewMessageChange","event","target","value","handleSendMessage","preventDefault","handleKeyUp","key","current","scrollIntoView","behavior","map","message","i","system","body","color"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\nimport { Board } from \"./components/Board\";\n\nconst Room = (props) => {\n\n  const { roomId, name } = props;\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\n  const { height, width } = useWindowDimensions();\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [gameID, setGameID] = useState(\"\");\n  const messageRef = useRef();\n  const {\n    messages,\n    user,\n    users,\n    typingUsers,\n    sendMessage,\n    startTypingMessage,\n    stopTypingMessage,\n  } = useChat(roomId, name);\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  const handleSendMessage = (event) => {\n    event.preventDefault();\n    cancelTyping();\n    if (newMessage !== \"\") {\n      sendMessage(newMessage, false);\n      setNewMessage(\"\");\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.key === \"Enter\") {\n      if (newMessage !== \"\") {\n        sendMessage(newMessage, false);\n        setNewMessage(\"\");\n      }\n    }\n  };\n\n  useEffect(() => messageRef.current.scrollIntoView({ behavior: \"smooth\" }));\n\n  useEffect(() => {\n    if (isTyping) startTypingMessage();\n    else stopTypingMessage();\n  }, [isTyping]);\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-scheme-dark overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <a\n          href=\"/\"\n          className=\"md:left-4 md:top-4 left-2 top-2 absolute md:pr-6 hidden md:flex\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"md:h-10 md:w-10 h-8 w-8 text-scheme-orange\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n            />\n          </svg>\n        </a>\n        <div className=\"sm:mt-auto overflow-hidden m-auto mt-0\">\n          <div className=\"flex md:mt-2 text-gray-400\">\n            <div className=\"flex mr-auto p-2 pl-0\">\n              <h1 className=\"md:text-xl text-sm pr-1\">game:</h1>\n              <a\n                href={`https://lichess.org/${gameID}`}\n                className=\"md:text-xl text-sm underline  \"\n              >\n                lichess.org/{gameID}\n              </a>\n            </div>\n            <h1 className=\"md:text-xl text-sm p-2 ml-auto\">room: {roomId}</h1>\n          </div>\n          <Board roomId={roomId} />\n        </div>\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-scheme-dark ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <>\n              <ol>\n                {messages.map((message, i) => (\n                  <li key={i}>\n                    {message.system === true ? (\n                      <div className=\"text-center text-gray-500 text-sm\">\n                        {message.body}\n                      </div>\n                    ) : (\n                      <span className=\"text-left text-white text-sm flex\">\n                        {message.name ? (\n                          <div\n                            className={`font-bold ${message.user.color} mr-1`}\n                          >\n                            {message.name}:\n                          </div>\n                        ) : (\n                          <>{\"\"}</>\n                        )}\n                        {message.body}\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ol>\n              <div className=\"xl:w-30% px-auto w-99 bottom-1 absolute\">\n                <input\n                  className=\"w-full h-10 pl-3 pr-8 text-base placeholder-white-600 text-gray-500 border bg-scheme-light rounded-lg\"\n                  id=\"message\"\n                  type=\"text\"\n                  label=\"Message\"\n                  placeholder=\"enter message here\"\n                  variant=\"outlined\"\n                  value={newMessage}\n                  onChange={handleNewMessageChange}\n                  onKeyUp={handleKeyUp}\n                />\n                <button\n                  className=\"absolute inset-y-0 h-10 right-0 flex items-center px-4 font-bold text-white bg-scheme-orange rounded-r-lg\"\n                  disabled={!newMessage}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSendMessage}\n                >\n                  Send\n                </button>\n              </div>\n            </>\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}