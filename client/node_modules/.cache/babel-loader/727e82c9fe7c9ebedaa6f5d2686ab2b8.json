{"ast":null,"code":"import _slicedToArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from\"react\";import Room from\"./Room\";import JoinChat from\"./JoinChat\";import useWindowDimensions from\"./hooks/WindowDimensions\";import{jsx as _jsx}from\"react/jsx-runtime\";var Chat=function Chat(props){var _props$location$state;var _useWindowDimensions=useWindowDimensions(),height=_useWindowDimensions.height,width=_useWindowDimensions.width;var roomId=props.match.params.roomId;var _useState=useState((_props$location$state=props.location.state)===null||_props$location$state===void 0?void 0:_props$location$state.name),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var updateName=function updateName(name){setName(name);};return/*#__PURE__*/_jsx(\"div\",{style:{height:height,width:width},className:\"ml-auto bg-gray-900 overflow-hidden fixed\",children:name?/*#__PURE__*/_jsx(Room,{name:name,roomId:roomId}):/*#__PURE__*/_jsx(JoinChat,{roomId:roomId,onNameUpdate:updateName})});};export default Chat;","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/Chat.jsx"],"names":["React","useRef","useState","useEffect","Room","JoinChat","useWindowDimensions","Chat","props","height","width","roomId","match","params","location","state","name","setName","updateName"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,0BAAhC,C,2CAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,2BACtB,yBAA0BF,mBAAmB,EAA7C,CAAQG,MAAR,sBAAQA,MAAR,CAAgBC,KAAhB,sBAAgBA,KAAhB,CACA,GAAQC,CAAAA,MAAR,CAAmBH,KAAK,CAACI,KAAN,CAAYC,MAA/B,CAAQF,MAAR,CACA,cAAwBT,QAAQ,wBAACM,KAAK,CAACM,QAAN,CAAeC,KAAhB,gDAAC,sBAAsBC,IAAvB,CAAhC,wCAAOA,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,IAAD,CAAU,CAC3BC,OAAO,CAACD,IAAD,CAAP,CACD,CAFD,CAGA,mBACE,YACE,KAAK,CAAE,CAAEP,MAAM,CAAEA,MAAV,CAAkBC,KAAK,CAAEA,KAAzB,CADT,CAEE,SAAS,CAAC,2CAFZ,UAIGM,IAAI,cACH,KAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,CAAkB,MAAM,CAAEL,MAA1B,EADG,cAGH,KAAC,QAAD,EAAU,MAAM,CAAEA,MAAlB,CAA0B,YAAY,CAAEO,UAAxC,EAPJ,EADF,CAYD,CApBD,CAsBA,cAAeX,CAAAA,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Room from \"./Room\";\nimport JoinChat from \"./JoinChat\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\n\nconst Chat = (props) => {\n  const { height, width } = useWindowDimensions();\n  const { roomId } = props.match.params;\n  const [name, setName] = useState(props.location.state?.name);\n\n  const updateName = (name) => {\n    setName(name);\n  };\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-gray-900 overflow-hidden fixed\"\n    >\n      {name ? (\n        <Room name={name} roomId={roomId} />\n      ) : (\n        <JoinChat roomId={roomId} onNameUpdate={updateName} />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}