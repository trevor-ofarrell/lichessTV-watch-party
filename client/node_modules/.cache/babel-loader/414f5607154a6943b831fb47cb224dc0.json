{"ast":null,"code":"/*!\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\nvar fs = require('fs');\n\nfunction Options(defaults) {\n  var internalValues = {};\n  var values = this.value = {};\n  Object.keys(defaults).forEach(function (key) {\n    internalValues[key] = defaults[key];\n    Object.defineProperty(values, key, {\n      get: function () {\n        return internalValues[key];\n      },\n      configurable: false,\n      enumerable: true\n    });\n  });\n\n  this.reset = function () {\n    Object.keys(defaults).forEach(function (key) {\n      internalValues[key] = defaults[key];\n    });\n    return this;\n  };\n\n  this.merge = function (options, required) {\n    options = options || {};\n\n    if (Object.prototype.toString.call(required) === '[object Array]') {\n      var missing = [];\n\n      for (var i = 0, l = required.length; i < l; ++i) {\n        var key = required[i];\n\n        if (!(key in options)) {\n          missing.push(key);\n        }\n      }\n\n      if (missing.length > 0) {\n        if (missing.length > 1) {\n          throw new Error('options ' + missing.slice(0, missing.length - 1).join(', ') + ' and ' + missing[missing.length - 1] + ' must be defined');\n        } else throw new Error('option ' + missing[0] + ' must be defined');\n      }\n    }\n\n    Object.keys(options).forEach(function (key) {\n      if (key in internalValues) {\n        internalValues[key] = options[key];\n      }\n    });\n    return this;\n  };\n\n  this.copy = function (keys) {\n    var obj = {};\n    Object.keys(defaults).forEach(function (key) {\n      if (keys.indexOf(key) !== -1) {\n        obj[key] = values[key];\n      }\n    });\n    return obj;\n  };\n\n  this.read = function (filename, cb) {\n    if (typeof cb == 'function') {\n      var self = this;\n      fs.readFile(filename, function (error, data) {\n        if (error) return cb(error);\n        var conf = JSON.parse(data);\n        self.merge(conf);\n        cb();\n      });\n    } else {\n      var conf = JSON.parse(fs.readFileSync(filename));\n      this.merge(conf);\n    }\n\n    return this;\n  };\n\n  this.isDefined = function (key) {\n    return typeof values[key] != 'undefined';\n  };\n\n  this.isDefinedAndNonNull = function (key) {\n    return typeof values[key] != 'undefined' && values[key] !== null;\n  };\n\n  Object.freeze(values);\n  Object.freeze(this);\n}\n\nmodule.exports = Options;","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/node_modules/options/lib/options.js"],"names":["fs","require","Options","defaults","internalValues","values","value","Object","keys","forEach","key","defineProperty","get","configurable","enumerable","reset","merge","options","required","prototype","toString","call","missing","i","l","length","push","Error","slice","join","copy","obj","indexOf","read","filename","cb","self","readFile","error","data","conf","JSON","parse","readFileSync","isDefined","isDefinedAndNonNull","freeze","module","exports"],"mappings":"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","sourcesContent":["/*!\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar fs = require('fs');\n\nfunction Options(defaults) {\n  var internalValues = {};\n  var values = this.value = {};\n  Object.keys(defaults).forEach(function(key) {\n    internalValues[key] = defaults[key];\n    Object.defineProperty(values, key, {\n      get: function() { return internalValues[key]; },\n      configurable: false,\n      enumerable: true\n    });\n  });\n  this.reset = function() {\n    Object.keys(defaults).forEach(function(key) {\n      internalValues[key] = defaults[key];\n    });\n    return this;\n  };\n  this.merge = function(options, required) {\n    options = options || {};\n    if (Object.prototype.toString.call(required) === '[object Array]') {\n      var missing = [];\n      for (var i = 0, l = required.length; i < l; ++i) {\n        var key = required[i];\n        if (!(key in options)) {\n          missing.push(key);\n        }\n      }\n      if (missing.length > 0) {\n        if (missing.length > 1) {\n          throw new Error('options ' +\n            missing.slice(0, missing.length - 1).join(', ') + ' and ' +\n            missing[missing.length - 1] + ' must be defined');\n        }\n        else throw new Error('option ' + missing[0] + ' must be defined');\n      }\n    }\n    Object.keys(options).forEach(function(key) {\n      if (key in internalValues) {\n        internalValues[key] = options[key];\n      }\n    });\n    return this;\n  };\n  this.copy = function(keys) {\n    var obj = {};\n    Object.keys(defaults).forEach(function(key) {\n      if (keys.indexOf(key) !== -1) {\n        obj[key] = values[key];\n      }\n    });\n    return obj;\n  };\n  this.read = function(filename, cb) {\n    if (typeof cb == 'function') {\n      var self = this;\n      fs.readFile(filename, function(error, data) {\n        if (error) return cb(error);\n        var conf = JSON.parse(data);\n        self.merge(conf);\n        cb();\n      });\n    }\n    else {\n      var conf = JSON.parse(fs.readFileSync(filename));\n      this.merge(conf);\n    }\n    return this;\n  };\n  this.isDefined = function(key) {\n    return typeof values[key] != 'undefined';\n  };\n  this.isDefinedAndNonNull = function(key) {\n    return typeof values[key] != 'undefined' && values[key] !== null;\n  };\n  Object.freeze(values);\n  Object.freeze(this);\n}\n\nmodule.exports = Options;\n"]},"metadata":{},"sourceType":"script"}