{"ast":null,"code":"var util = require('util'),\n    events = require('events');\n\nmodule.exports = SSEClient;\n\nfunction SSEClient(req, res) {\n  this.req = req;\n  this.res = res;\n  var self = this;\n  res.on('close', function () {\n    self.emit('close');\n  });\n}\n\nutil.inherits(SSEClient, events.EventEmitter);\n\nSSEClient.prototype.initialize = function () {\n  this.req.socket.setNoDelay(true);\n  this.res.writeHead(200, {\n    'Content-Type': 'text/event-stream',\n    'Cache-Control': 'no-cache, no-transform',\n    'Connection': 'keep-alive'\n  });\n  this.res.write(':ok\\n\\n');\n};\n\nSSEClient.prototype.send = function (event, data, id) {\n  if (arguments.length === 0) return;\n  var senderObject = {\n    event: event || undefined,\n    data: data || undefined,\n    id: id || undefined,\n    retry: undefined\n  };\n\n  if (typeof event == 'object') {\n    senderObject.event = event.event || undefined, senderObject.data = event.data || undefined, senderObject.id = event.id || undefined, senderObject.retry = event.retry || undefined;\n  }\n\n  if (typeof event != 'object' && arguments.length === 1) {\n    senderObject.event = undefined;\n    senderObject.data = event;\n  }\n\n  if (senderObject.event) this.res.write('event: ' + senderObject.event + '\\n');\n  if (senderObject.retry) this.res.write('retry: ' + senderObject.retry + '\\n');\n  if (senderObject.id) this.res.write('id: ' + senderObject.id + '\\n');\n  senderObject.data = senderObject.data.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n  var dataLines = senderObject.data.split(/\\n/);\n\n  for (var i = 0, l = dataLines.length; i < l; ++i) {\n    var line = dataLines[i];\n    if (i + 1 === l) this.res.write('data: ' + line + '\\n\\n');else this.res.write('data: ' + line + '\\n');\n  }\n};\n\nSSEClient.prototype.close = function () {\n  this.res.end();\n};","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/node_modules/sse/lib/sseclient.js"],"names":["util","require","events","module","exports","SSEClient","req","res","self","on","emit","inherits","EventEmitter","prototype","initialize","socket","setNoDelay","writeHead","write","send","event","data","id","arguments","length","senderObject","undefined","retry","replace","dataLines","split","i","l","line","close","end"],"mappings":"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","sourcesContent":["var util    = require('util'),\n    events  = require('events');\n\nmodule.exports = SSEClient;\n\nfunction SSEClient(req, res) {\n  this.req = req;\n  this.res = res;\n  var self = this;\n  res.on('close', function() {\n    self.emit('close');\n  });\n}\n\nutil.inherits(SSEClient, events.EventEmitter);\n\nSSEClient.prototype.initialize = function() {\n  this.req.socket.setNoDelay(true);\n  this.res.writeHead(200, {\n    'Content-Type': 'text/event-stream',\n    'Cache-Control': 'no-cache, no-transform',\n    'Connection': 'keep-alive'\n  });\n  this.res.write(':ok\\n\\n');\n};\n\nSSEClient.prototype.send = function(event, data, id) {\n  if (arguments.length === 0) return;\n\n  var senderObject = {\n    event : event || undefined,\n    data  : data || undefined,\n    id    : id || undefined,\n    retry : undefined\n  };\n\n  if (typeof event == 'object') {\n    senderObject.event   = event.event || undefined,\n    senderObject.data    = event.data || undefined,\n    senderObject.id      = event.id || undefined,\n    senderObject.retry   = event.retry || undefined\n  }\n\n  if (typeof event != 'object' && arguments.length === 1) {\n    senderObject.event   = undefined;\n    senderObject.data    = event;\n  }\n\n  if (senderObject.event) this.res.write('event: ' + senderObject.event + '\\n');\n  if (senderObject.retry) this.res.write('retry: ' + senderObject.retry + '\\n');\n  if (senderObject.id) this.res.write('id: ' + senderObject.id + '\\n');\n\n  senderObject.data = senderObject.data.replace(/(\\r\\n|\\r|\\n)/g, '\\n');\n  var dataLines = senderObject.data.split(/\\n/);\n\n  for (var i = 0, l = dataLines.length; i < l; ++i) {\n    var line = dataLines[i];\n    if ((i+1) === l) this.res.write('data: ' + line + '\\n\\n');\n    else this.res.write('data: ' + line + '\\n');\n  }\n}\n\nSSEClient.prototype.close = function() {\n  this.res.end();\n}\n"]},"metadata":{},"sourceType":"script"}