{"ast":null,"code":"var _jsxFileName = \"/home/d9/code/lichessTV-watch-party/client/src/JoinChat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\nimport { Board } from \"./components/Board\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\nimport { Input, InputTextLeft } from \"./components/Inputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JoinChat = props => {\n  _s();\n\n  const {\n    roomId,\n    onNameUpdate\n  } = props;\n  const [name, setName] = useState(\"\");\n  const {\n    isTyping,\n    startTyping,\n    stopTyping,\n    cancelTyping\n  } = useTyping();\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [userName, setUserName] = useState(\"\");\n  const messageRef = useRef();\n  const [listening, setListening] = useState(false);\n  const {\n    addUser\n  } = useChat(roomId, name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: height,\n      width: width\n    },\n    className: \"ml-auto bg-scheme-dark overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        roomId: roomId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-scheme-dark ml-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-full ml-1 mt-1 overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-xl p-4 text-center text-white\",\n            children: [\"Room: \", roomId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-auto xl:pt-12\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-bold text-white text-center text-lg px-4\",\n              children: \"Create a username to join the chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"xl:w-full w-80 overflow-hidden p-4 m-auto\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"w-full h-10 pl-3 text-base bg-scheme-light placeholder-gray-500 border rounded-lg focus:shadow-outline\",\n                  id: \"message\",\n                  type: \"text\",\n                  label: \"Message\",\n                  placeholder: \"enter username\",\n                  variant: \"outlined\",\n                  value: userName,\n                  onChange: event => setUserName(event.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"h-12 m-auto flex items-center px-4 font-bold text-white bg-scheme-orange rounded-lg\",\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: () => {\n                setName(userName);\n                onNameUpdate(userName);\n                addUser(userName);\n              },\n              children: \"Join Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messageRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(JoinChat, \"lHl7+9MvwSHN+DhxCUsulYytDAE=\", false, function () {\n  return [useTyping, useWindowDimensions, useChat];\n});\n\n_c = JoinChat;\nexport default JoinChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinChat\");","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/JoinChat.jsx"],"names":["React","useRef","useState","useEffect","Chessboard","useChat","useTyping","Board","useWindowDimensions","Input","InputTextLeft","JoinChat","props","roomId","onNameUpdate","name","setName","isTyping","startTyping","stopTyping","cancelTyping","height","width","userName","setUserName","messageRef","listening","setListening","addUser","event","target","value"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport tw from \"twin.macro\";\nimport useChat from \"./useChat\";\nimport useTyping from \"./useTyping\";\nimport { Board } from \"./components/Board\";\nimport useWindowDimensions from \"./hooks/WindowDimensions\";\nimport { Input, InputTextLeft } from \"./components/Inputs\"\n\nconst JoinChat = (props) => {\n  const { roomId, onNameUpdate } = props;\n  const [name, setName] = useState(\"\");\n  const { isTyping, startTyping, stopTyping, cancelTyping } = useTyping();\n  const { height, width } = useWindowDimensions();\n  const [userName, setUserName] = useState(\"\");\n  const messageRef = useRef();\n  const [listening, setListening] = useState(false);\n  const {\n    addUser,\n  } = useChat(roomId, name);\n\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-scheme-dark overflow-hidden\"\n    >\n      <div className=\"h-full max-h-full flex flex-col xl:items-stretch xl:flex-row overflow-hidden\">\n        <Board roomId={roomId} />\n        <div className=\"rounded-lg h-full xl:w-2/6 xl:max-h-full max-h-4/12 w-full max-w-full xl:max-w-2/6 pb-14 bg-scheme-dark ml-auto\">\n          <div className=\"h-full ml-1 mt-1 overflow-y-auto\">\n            <h1 className=\"text-xl p-4 text-center text-white\">\n              Room: {roomId}\n            </h1>\n            <div className=\"m-auto xl:pt-12\">\n              <div className=\"font-bold text-white text-center text-lg px-4\">\n                Create a username to join the chat\n              </div>\n              <div>\n                <div className=\"xl:w-full w-80 overflow-hidden p-4 m-auto\">\n                  <input\n                    className=\"w-full h-10 pl-3 text-base bg-scheme-light placeholder-gray-500 border rounded-lg focus:shadow-outline\"\n                    id=\"message\"\n                    type=\"text\"\n                    label=\"Message\"\n                    placeholder=\"enter username\"\n                    variant=\"outlined\"\n                    value={userName}\n                    onChange={(event) => setUserName(event.target.value)}\n                  />\n                </div>\n              </div>\n              <button\n                className=\"h-12 m-auto flex items-center px-4 font-bold text-white bg-scheme-orange rounded-lg\"\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  setName(userName);\n                  onNameUpdate(userName);\n                  addUser(userName);\n                }}\n              >\n                Join Chat\n              </button>\n            </div>\n            <div ref={messageRef}></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default JoinChat;\n"]},"metadata":{},"sourceType":"module"}