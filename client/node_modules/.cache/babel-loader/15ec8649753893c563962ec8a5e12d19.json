{"ast":null,"code":"var _jsxFileName = \"/home/d9/code/lichessTV-watch-party/client/src/components/Board.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createPlayerObjects = (user, setPlayer) => {\n  setPlayer({\n    name: user.user.name,\n    title: user.user.title,\n    rating: String(user.rating)\n  });\n};\n\nexport const Board = props => {\n  _s();\n\n  const {\n    roomId\n  } = props;\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState({});\n  const [white, setWhite] = useState({});\n  const [listening, setListening] = useState(false);\n  let pgnData = {};\n  useEffect(async () => {\n    if (!listening) {\n      let source;\n\n      if (roomId !== \"featured\") {\n        if (pgnData.id !== roomId) {\n          pgnData = await fetch(`http://localhost:3030/pgn/?id=${roomId}`).then(res => res.json());\n\n          if (pgnData.players.black) {\n            createPlayerObjects(pgnData.players.white, setWhite);\n            createPlayerObjects(pgnData.players.black, setBlack);\n          }\n        }\n\n        source = new EventSource(`${process.env.REACT_APP_API_ENDPOINT}/lichesstvcustom/?id=${roomId}`);\n\n        source.onmessage = event => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.fen]);\n        };\n      } else {\n        source = new EventSource(`${process.env.REACT_APP_API_ENDPOINT}/lichesstv`);\n\n        source.onmessage = event => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.d.fen]);\n\n          if (parsedData.d.players) {\n            createPlayerObjects(parsedData.d.players[0], setWhite);\n            createPlayerObjects(parsedData.d.players[1], setBlack);\n          }\n        };\n      }\n\n      setListening(true);\n    }\n  }, [listening, FEN]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sm:mt-auto overflow-hidden m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\",\n      children: [\"FEN: \", FEN]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex font-medium md:text-2xl text-lg my-1 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-scheme-orange\",\n          children: [black.title, \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [black.name, \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500\",\n          children: black.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-auto\",\n        children: /*#__PURE__*/_jsxDEV(Chessboard, {\n          position: FEN[0],\n          transitionDuration: 100,\n          showNotation: false,\n          calcWidth: size => size.screenWidth < 1440 ? size.screenHeight / 100 * 46 : size.screenWidth > 1440 ? size.screenHeight / 100 * 70 : screen.width / 100 * 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex font-medium md:text-2xl text-lg my-1 text-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-scheme-orange\",\n          children: [white.title, \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [white.name, \"\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500\",\n          children: white.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Board, \"c6dhoWXnlsQjtsXxWThN5WP4o6E=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/components/Board.js"],"names":["React","useState","useEffect","Chessboard","createPlayerObjects","user","setPlayer","name","title","rating","String","Board","props","roomId","FEN","setFEN","black","setBlack","white","setWhite","listening","setListening","pgnData","source","id","fetch","then","res","json","players","EventSource","process","env","REACT_APP_API_ENDPOINT","onmessage","event","parsedData","JSON","parse","data","fen","d","size","screenWidth","screenHeight","screen","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chessboard from \"chessboardjsx\";\n\nconst createPlayerObjects = (user, setPlayer) => {\n  setPlayer({\n    name: user.user.name,\n    title: user.user.title,\n    rating: String(user.rating),\n  });\n};\n\nexport const Board = (props) => {\n  const { roomId } = props;\n  const [FEN, setFEN] = useState([]);\n  const [black, setBlack] = useState({});\n  const [white, setWhite] = useState({});\n  const [listening, setListening] = useState(false);\n\n  let pgnData = {};\n  useEffect(async () => {\n    if (!listening) {\n      let source;\n      if (roomId !== \"featured\") {\n        if (pgnData.id !== roomId) {\n          pgnData = await fetch(\n            `http://localhost:3030/pgn/?id=${roomId}`\n          ).then((res) => res.json());\n          if (pgnData.players.black) {\n            createPlayerObjects(pgnData.players.white, setWhite);\n            createPlayerObjects(pgnData.players.black, setBlack);\n          }\n        }\n        source = new EventSource(\n          `${process.env.REACT_APP_API_ENDPOINT}/lichesstvcustom/?id=${roomId}`\n        );\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.fen]);\n        };\n      } else {\n        source = new EventSource(\n          `${process.env.REACT_APP_API_ENDPOINT}/lichesstv`\n        );\n        source.onmessage = (event) => {\n          const parsedData = JSON.parse(event.data);\n          setFEN([parsedData.d.fen]);\n          if (parsedData.d.players) {\n            createPlayerObjects(parsedData.d.players[0], setWhite);\n            createPlayerObjects(parsedData.d.players[1], setBlack);\n          }\n        };\n      }\n      setListening(true);\n    }\n  }, [listening, FEN]);\n\n  return (\n    <div className=\"sm:mt-auto overflow-hidden m-auto\">\n      <div className=\"font-medium md:text-sm text-xs text-white max-w-70 text-left break-all\">\n        FEN: {FEN}\n      </div>\n      <div className=\"m-auto\">\n        <div className=\"flex font-medium md:text-2xl text-lg my-1 text-white\">\n          <div className=\"text-scheme-orange\">{black.title}&nbsp;</div>\n          <div>{black.name}&nbsp;</div>\n          <div className=\"text-gray-500\">{black.rating}</div>\n        </div>\n        <div className=\"m-auto\">\n          <Chessboard\n            position={FEN[0]}\n            transitionDuration={100}\n            showNotation={false}\n            calcWidth={(size) =>\n              size.screenWidth < 1440\n                ? (size.screenHeight / 100) * 46\n                : size.screenWidth > 1440\n                ? (size.screenHeight / 100) * 70\n                : (screen.width / 100) * 100\n            }\n          />\n        </div>\n        <div className=\"flex font-medium md:text-2xl text-lg my-1 text-white\">\n          <div className=\"text-scheme-orange\">{white.title}&nbsp;</div>\n          <div>{white.name}&nbsp;</div>\n          <div className=\"text-gray-500\">{white.rating}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}