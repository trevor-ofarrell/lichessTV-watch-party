{"ast":null,"code":"import _slicedToArray from\"/home/d9/code/lichessTV-watch-party/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from\"react\";import Room from\"./Room\";import JoinChat from\"./JoinChat\";import{jsx as _jsx}from\"react/jsx-runtime\";var getWindowDimensions=function getWindowDimensions(){var _window=window,width=_window.innerWidth,height=_window.innerHeight;return{width:width,height:height};};var useWindowDimensions=function useWindowDimensions(){var _useState=useState(getWindowDimensions()),_useState2=_slicedToArray(_useState,2),windowDimensions=_useState2[0],setWindowDimensions=_useState2[1];useEffect(function(){function handleResize(){setWindowDimensions(getWindowDimensions());}window.addEventListener(\"resize\",handleResize);return function(){return window.removeEventListener(\"resize\",handleResize);};},[]);return windowDimensions;};var Chat=function Chat(props){var _props$location$state;var _useWindowDimensions=useWindowDimensions(),height=_useWindowDimensions.height,width=_useWindowDimensions.width;var roomId=props.match.params.roomId;var _useState3=useState((_props$location$state=props.location.state)===null||_props$location$state===void 0?void 0:_props$location$state.name),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var updateName=function updateName(name){setName(name);};return/*#__PURE__*/_jsx(\"div\",{style:{height:height,width:width},className:\"ml-auto bg-gray-900 overflow-hidden fixed\",children:name?/*#__PURE__*/_jsx(Room,{name:name,roomId:roomId}):/*#__PURE__*/_jsx(JoinChat,{roomId:roomId,onNameUpdate:updateName})});};export default Chat;","map":{"version":3,"sources":["/home/d9/code/lichessTV-watch-party/client/src/Chat.jsx"],"names":["React","useRef","useState","useEffect","Room","JoinChat","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Chat","props","roomId","match","params","location","state","name","setName","updateName"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,CAAkCC,SAAlC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,2CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,YAAmDC,MAAnD,CAAoBC,KAApB,SAAQC,UAAR,CAAwCC,MAAxC,SAA2BC,WAA3B,CACA,MAAO,CACLH,KAAK,CAALA,KADK,CAELE,MAAM,CAANA,MAFK,CAAP,CAID,CAND,CAQA,GAAME,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CAChC,cAAgDV,QAAQ,CACtDI,mBAAmB,EADmC,CAAxD,wCAAOO,gBAAP,eAAyBC,mBAAzB,eAIAX,SAAS,CAAC,UAAM,CACd,QAASY,CAAAA,YAAT,EAAwB,CACtBD,mBAAmB,CAACR,mBAAmB,EAApB,CAAnB,CACD,CAEDC,MAAM,CAACS,gBAAP,CAAwB,QAAxB,CAAkCD,YAAlC,EACA,MAAO,kBAAMR,CAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,CAAqCF,YAArC,CAAN,EAAP,CACD,CAPQ,CAON,EAPM,CAAT,CASA,MAAOF,CAAAA,gBAAP,CACD,CAfD,CAiBA,GAAMK,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,KAAD,CAAW,2BACtB,yBAA0BP,mBAAmB,EAA7C,CAAQF,MAAR,sBAAQA,MAAR,CAAgBF,KAAhB,sBAAgBA,KAAhB,CACA,GAAQY,CAAAA,MAAR,CAAmBD,KAAK,CAACE,KAAN,CAAYC,MAA/B,CAAQF,MAAR,CACA,eAAwBlB,QAAQ,wBAACiB,KAAK,CAACI,QAAN,CAAeC,KAAhB,gDAAC,sBAAsBC,IAAvB,CAAhC,yCAAOA,IAAP,eAAaC,OAAb,eAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACF,IAAD,CAAU,CAC3BC,OAAO,CAACD,IAAD,CAAP,CACD,CAFD,CAGA,mBACE,YACE,KAAK,CAAE,CAAEf,MAAM,CAAEA,MAAV,CAAkBF,KAAK,CAAEA,KAAzB,CADT,CAEE,SAAS,CAAC,2CAFZ,UAIGiB,IAAI,cACH,KAAC,IAAD,EAAM,IAAI,CAAEA,IAAZ,CAAkB,MAAM,CAAEL,MAA1B,EADG,cAGH,KAAC,QAAD,EAAU,MAAM,CAAEA,MAAlB,CAA0B,YAAY,CAAEO,UAAxC,EAPJ,EADF,CAYD,CApBD,CAsBA,cAAeT,CAAAA,IAAf","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Room from \"./Room\";\nimport JoinChat from \"./JoinChat\";\n\nconst getWindowDimensions = () => {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height,\n  };\n};\n\nconst useWindowDimensions = () => {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n};\n\nconst Chat = (props) => {\n  const { height, width } = useWindowDimensions();\n  const { roomId } = props.match.params;\n  const [name, setName] = useState(props.location.state?.name);\n\n  const updateName = (name) => {\n    setName(name);\n  };\n  return (\n    <div\n      style={{ height: height, width: width }}\n      className=\"ml-auto bg-gray-900 overflow-hidden fixed\"\n    >\n      {name ? (\n        <Room name={name} roomId={roomId} />\n      ) : (\n        <JoinChat roomId={roomId} onNameUpdate={updateName} />\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}